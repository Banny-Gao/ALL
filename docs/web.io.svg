<svg host="65bd71144e" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3271px" height="3186px" viewBox="-0.5 -0.5 3271 3186" content="&lt;mxfile&gt;&lt;diagram id=&quot;msI5m-uXt5gE0oS0JOu1&quot; name=&quot;第 1 页&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;">
    <defs/>
    <g>
        <path d="M 607 930 L 607 943.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 948.88 L 603.5 941.88 L 607 943.63 L 610.5 941.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="557" y="900" width="100" height="30" rx="4.5" ry="4.5" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="557" y="900" width="100" height="30" rx="4.5" ry="4.5" fill="#76608a" stroke="#432d57" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 92px; height: 1px; padding-top: 915px; margin-left: 561px;">
                        <div data-drawio-colors="color: #ffffff; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <font color="#ffffff">
                                    浏览器渲染流程
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="607" y="919" fill="#ffffff" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    浏览器渲染流程
                </text>
            </switch>
        </g>
        <path d="M 607 980 L 607 1044.26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1049.51 L 603.5 1042.51 L 607 1044.26 L 610.5 1042.51 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="574.5" y="950" width="65" height="30" rx="4.5" ry="4.5" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="574.5" y="950" width="65" height="30" rx="4.5" ry="4.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 57px; height: 1px; padding-top: 965px; margin-left: 579px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                新建进程
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="607" y="969" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    新建进程
                </text>
            </switch>
        </g>
        <path d="M 530 965 L 568.13 965" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 573.38 965 L 566.38 968.5 L 568.13 965 L 566.38 961.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 453.18 942.5 L 452.52 896.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 452.44 891.12 L 456.04 898.07 L 452.52 896.37 L 449.04 898.17 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="377" y="942.5" width="153" height="45" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="377" y="942.5" width="153" height="45" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 151px; height: 1px; padding-top: 965px; margin-left: 378px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <font color="#ff8000">
                                    进程
                                </font>
                                ：资源分配的基本单位
                                <br/>
                                <font color="#ff8000">
                                    线程
                                </font>
                                ：独立调度的基本单位
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="454" y="969" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    进程：资源分配的基本单位
线程：独立调度的基本单位
                </text>
            </switch>
        </g>
        <path d="M 452 830 L 452 796.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 452 791.12 L 455.5 798.12 L 452 796.37 L 448.5 798.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="377" y="830" width="150" height="60" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="377" y="830" width="150" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 860px; margin-left: 382px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                浏览器：多进程，顶级
                                <font color="#ff8000">
                                    Browser Process
                                </font>
                                控制其他进程
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="382" y="864" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    浏览器：多进程，顶级 Browser Process 控制其他进程
                </text>
            </switch>
        </g>
        <path d="M 527 735 L 705.63 735" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 710.88 735 L 703.88 738.5 L 705.63 735 L 703.88 731.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 527 762.5 L 597 762.56 Q 607 762.57 607 772.57 L 607 850 Q 607 860 617 860 L 667 860 Q 677 860 677 870 L 677 905 Q 677 915 687 915 L 705.63 915" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 710.88 915 L 703.88 918.5 L 705.63 915 L 703.88 911.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 377 735 L 347 735 Q 337 735 337 745 L 337 760 Q 337 770 327 770 L 303.37 770" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 298.12 770 L 305.12 766.5 L 303.37 770 L 305.12 773.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="377" y="680" width="150" height="110" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="377" y="680" width="150" height="110" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 735px; margin-left: 382px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span>
                                        Device Process
                                    </span>
                                </div>
                                <div>
                                    <span>
                                        Plugin Process
                                    </span>
                                </div>
                                <div>
                                    Network Process
                                </div>
                                <div>
                                    Storage Process
                                </div>
                                <div>
                                    UI Process
                                    <br/>
                                    <font color="#ff8000">
                                        GPU Process
                                    </font>
                                </div>
                                <div>
                                    <font color="#ff8000">
                                        Renderer Process
                                    </font>
                                    <br/>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="382" y="739" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    Device Process...
                </text>
            </switch>
        </g>
        <path d="M 808.96 705 L 808.1 656.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 808 651.12 L 811.63 658.05 L 808.1 656.37 L 804.63 658.18 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="712" y="705" width="195" height="60" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="712" y="705" width="195" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 187px; height: 1px; padding-top: 735px; margin-left: 717px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                3D 加速
                                <br/>
                                提升页面渲染
                                <br/>
                                <font color="#ff8000">
                                    图层
                                </font>
                                之间互不影响，减少
                                <font color="#ff8000">
                                    重绘回流
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="717" y="739" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    3D 加速...
                </text>
            </switch>
        </g>
        <rect x="582" y="710" width="70" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 720px; margin-left: 617px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000" style="font-size: 10px">
                                    GPU Process
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="617" y="723" fill="#FF8000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    GPU Process
                </text>
            </switch>
        </g>
        <path d="M 902 595.69 L 990.63 596.33" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 995.88 596.37 L 988.86 599.82 L 990.63 596.33 L 988.91 592.82 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="712" y="540" width="190" height="110" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="712" y="540" width="190" height="110" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 182px; height: 1px; padding-top: 595px; margin-left: 717px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                渲染图层：页面普通
                                <font color="#ff8000">
                                    文档流
                                </font>
                                。定位、浮动会脱离文档流，但仍属于默认图层
                                <br/>
                                复合图层：独立分配系统资源，GPU 处理，每个复合图层都有独立的绘制上下文
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="717" y="599" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    渲染图层：页面普通文档流。定位、浮动会脱离文档流，但仍属于默认图层
复合图层：独立分配系统资源，GPU 处理，每个复合图层都有独立的绘制上下文
                </text>
            </switch>
        </g>
        <rect x="807" y="670" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 680px; margin-left: 827px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000">
                                    图层
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="827" y="683" fill="#FF8000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    图层
                </text>
            </switch>
        </g>
        <path d="M 1152 560 L 1152 526.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1152 521.12 L 1155.5 528.12 L 1152 526.37 L 1148.5 528.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1307 597.5 L 1399.63 597.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1404.88 597.5 L 1397.88 601 L 1399.63 597.5 L 1397.88 594 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="997" y="560" width="310" height="75" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="997" y="560" width="310" height="75" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 302px; height: 1px; padding-top: 598px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                文档流：元素排列时所占的位置，自上而下(块级)，自左而右(内联)，Normal Flow(正常
                                <font color="#ff8000">
                                    布局
                                </font>
                                流)
                                <br/>
                                脱离文档流：浮动和定位
                                <br/>
                                BFC：块级格式化上下文，独立渲染的区域。
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="601" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    文档流：元素排列时所占的位置，自上而下(块级)，自左而右(内联)，Normal Flow(正常布局流)...
                </text>
            </switch>
        </g>
        <rect x="917" y="570" width="50" height="30" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 585px; margin-left: 942px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <div style="font-size: 14px ; line-height: 19px">
                                    <span style="font-size: 10px ; background-color: rgb(255 , 255 , 255)">
                                        <font color="#000000">
                                            文档流
                                        </font>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="942" y="588" fill="#FF8000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    文档流
                </text>
            </switch>
        </g>
        <path d="M 910.12 748.02 L 927 748.01 Q 937 748 937 738 L 937 690 Q 937 680 947 680 L 1147.71 680 Q 1157.71 680 1157.71 686.99 L 1157.71 693.98" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1157.71 699.23 L 1154.21 692.23 L 1157.71 693.98 L 1161.21 692.23 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 914 898.4 L 913 898.41 Q 912 898.43 912 899.21 L 912 899.61 Q 912 900 922 900 L 967 900 Q 977 900 977 910 L 977 1365 Q 977 1375 983.82 1375 L 990.63 1375" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 995.88 1375 L 988.88 1378.5 L 990.63 1375 L 988.88 1371.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 912 980 L 927 980 Q 937 980 937 990 L 937 1570 Q 937 1580 927 1580 L 828.86 1580 Q 818.86 1580 818.84 1586.99 L 818.82 1593.97" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 818.8 1599.22 L 815.32 1592.21 L 818.82 1593.97 L 822.32 1592.23 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 812 1015 L 812 1078.95" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 812 1084.2 L 808.5 1077.2 L 812 1078.95 L 815.5 1077.2 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 812 815 L 812 800 Q 812 790 802 790 L 667 790 Q 657 790 657 780 L 657 670 Q 657 660 647 660 L 197 660 Q 187 660 187 651.31 L 187 642.62" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 187 637.37 L 190.5 644.37 L 187 642.62 L 183.5 644.37 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="712" y="815" width="200" height="200" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="712" y="815" width="200" height="200" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 192px; height: 1px; padding-top: 915px; margin-left: 717px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                GUI 渲染线程：
                                <span style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; background-color: rgb(255 , 255 , 255)">
                                    <font style="font-size: 11px">
                                        Parse HTML 、 Recalculate Style 、 Layer 、 Update Layer Tree 、 Paint
                                        <br/>
                                        JavaScript 引擎线程 (V8)：
                                    </font>
                                </span>
                                <font style="font-size: 12px ; background-color: rgb(255 , 255 , 255)">
                                    解析 Javascript 脚本，运行代码。与 GUI 互斥，
                                    <font color="#ff8000">
                                        Web Worker
                                    </font>
                                    中的 js 不会影响
                                    <br/>
                                    事件触发线程：控制
                                    <font color="#ff8000">
                                        Event Loop
                                    </font>
                                    ，遇到定时器、事件将对应任务加入事件队列
                                    <br/>
                                    定时器触发线程：setTimeout 、 setInterval
                                    <br/>
                                    <font color="#ff8000">
                                        异步请求
                                    </font>
                                    线程
                                    <br/>
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="717" y="919" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    GUI 渲染线程：Parse HTML 、 Recalculate Styl...
                </text>
            </switch>
        </g>
        <rect x="607" y="800" width="100" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 810px; margin-left: 657px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                Renderer Process
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="657" y="813" fill="#000000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    Renderer Process
                </text>
            </switch>
        </g>
        <rect x="627" y="840" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 850px; margin-left: 647px;">
                        <div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000">
                                    线程
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="647" y="853" fill="#FFFFFF" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    线程
                </text>
            </switch>
        </g>
        <path d="M 1152 450 L 1152 406.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1152 401.12 L 1155.5 408.12 L 1152 406.37 L 1148.5 408.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="997" y="450" width="310" height="70" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="997" y="450" width="310" height="70" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 302px; height: 1px; padding-top: 485px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                - 同一 BFC 元素 margin 会重叠
                                <br/>
                                - 不会与浮动元素重叠
                                <br/>
                                - 浮动元素会参与高度计算
                                <br/>
                                - 清除浮动即触发父级 BFC
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="489" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    - 同一 BFC 元素 margin 会重叠...
                </text>
            </switch>
        </g>
        <rect x="1152" y="536.25" width="30" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 546px; margin-left: 1167px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000">
                                    BFC
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1167" y="549" fill="#FF8000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    BFC
                </text>
            </switch>
        </g>
        <rect x="997" y="270" width="310" height="130" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 302px; height: 1px; padding-top: 335px; margin-left: 1002px;">
                        <div data-drawio-colors="color: #ffffff; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <p style="line-height: 1.1">
                                    <font style="font-size: 12px">
                                        <span style="color: rgb(80 , 250 , 123) ; font-style: italic">
                                            .clearfix
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198) ; font-style: italic">
                                            :
                                        </span>
                                        <span style="color: rgb(80 , 250 , 123) ; font-style: italic">
                                            after
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                            {
                                        </span>
                                        <br/>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(139 , 233 , 253)">
                                            content
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            :
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(233 , 242 , 132)">
                                            ''
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                            ;
                                        </span>
                                        <br/>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(139 , 233 , 253)">
                                            visibility
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            :
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(189 , 147 , 249)">
                                            hidden
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                            ;
                                        </span>
                                        <br/>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(139 , 233 , 253)">
                                            display
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            :
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(189 , 147 , 249)">
                                            block
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                            ;
                                        </span>
                                        <br/>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(139 , 233 , 253)">
                                            height
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            :
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(189 , 147 , 249)">
                                            0
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                            ;
                                        </span>
                                        <br/>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(139 , 233 , 253)">
                                            clear
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            :
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                        </span>
                                        <span style="color: rgb(189 , 147 , 249)">
                                            both
                                        </span>
                                        <span style="color: rgb(248 , 248 , 242)">
                                            ;
                                        </span>
                                        <br/>
                                    </font>
                                </p>
                                <div style="color: rgb(248 , 248 , 242) ; line-height: 19px">
                                    <div style="line-height: 19px">
                                        <div>
                                            <font style="font-size: 12px">
                                                }
                                            </font>
                                        </div>
                                    </div>
                                </div>
                                <p></p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="339" fill="#ffffff" font-family="Comic Sans MS" font-size="12px">
                    .clearfix:after {...
                </text>
            </switch>
        </g>
        <rect x="1152" y="420" width="60" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 430px; margin-left: 1182px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                清除浮动
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1182" y="433" fill="#000000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    清除浮动
                </text>
            </switch>
        </g>
        <path d="M 1756 597.49 L 1830.63 598.55" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 598.62 L 1828.83 602.02 L 1830.63 598.55 L 1828.93 595.02 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1756 624.06 L 1767 624.1 Q 1777 624.14 1777 634.14 L 1777 690 Q 1777 700 1787 700 L 1830.63 700" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 700 L 1828.88 703.5 L 1830.63 700 L 1828.88 696.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1406" y="544.37" width="350" height="106.25" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="544.37" width="350" height="106.25" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 597px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        display: none | initial | inherit | inline | block | flex | gird | table | table-cell | table-column | table-row | inline-block | inline-flex | inline-grid | inline-table | list-item
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <div style="line-height: 19px">
                                        <font style="font-size: 12px">
                                            position: static | relative | absolute | fixed | sticky
                                        </font>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="601" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    display: none | initial | inherit | inline | block | flex...
                </text>
            </switch>
        </g>
        <rect x="1327" y="575" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 585px; margin-left: 1347px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                布局
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1347" y="588" fill="#000000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    布局
                </text>
            </switch>
        </g>
        <rect x="1837" y="270" width="370" height="250" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="270" width="370" height="250" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 395px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div>
                                        主轴（main axis）
                                    </div>
                                    <div>
                                        <span>
                                            交叉轴（cross axis）
                                        </span>
                                    </div>
                                    <div>
                                        <span>
                                            flex-direction: row | column | revert | row-reverse | column-reverse 指定主轴方向
                                        </span>
                                    </div>
                                    <div>
                                        <span>
                                            flex-wrap
                                        </span>
                                    </div>
                                    <div>
                                        <span>
                                            flex-flow: flex-direction 和 flex-wrap 的缩写
                                        </span>
                                    </div>
                                    <div>
                                        <span>
                                            flex-shrink: 默认宽度之和大于容器的时候才会发生收缩
                                        </span>
                                        <span>
                                            flex-basis: 元素在主轴方向上的初始大小
                                        </span>
                                    </div>
                                    <div>
                                        <span>
                                            flex: flex-flow、flex-shrink、flex-basis 的缩写
                                        </span>
                                    </div>
                                    <div>
                                        <span>
                                            align-items: 控制交叉轴
                                        </span>
                                    </div>
                                    <div>
                                        - 子元素用 align-self 覆盖 align-items 规则, 通过
                                        <span>
                                            order
                                        </span>
                                        <span>
                                            改变排序，而不影响 dom 树结构
                                        </span>
                                    </div>
                                    <div>
                                        - justify-content: 控制主轴
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="399" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    主轴（main axis）...
                </text>
            </switch>
        </g>
        <rect x="1837" y="570" width="370" height="62.5" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="570" width="370" height="62.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 601px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div>
                                        grid-template-columns|grid-template-rows: 网格的行和列， fr、repeat
                                    </div>
                                    <div>
                                        <span>
                                            grid-template-areas: 定义网格区域名称
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="605" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    grid-template-columns|grid-template-rows: 网格的行和列， fr、repeat...
                </text>
            </switch>
        </g>
        <path d="M 1756 570.93 L 1786.57 570.88 Q 1796.57 570.86 1796.57 560.86 L 1796.57 405 Q 1796.57 395 1806.57 395 L 1830.63 395" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 395 L 1828.88 398.5 L 1830.63 395 L 1828.88 391.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1787" y="450" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 460px; margin-left: 1807px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                Flex
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1807" y="463" fill="#000000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    Flex
                </text>
            </switch>
        </g>
        <rect x="1766" y="575" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 585px; margin-left: 1786px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                Grid
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1786" y="588" fill="#000000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    Grid
                </text>
            </switch>
        </g>
        <rect x="1837" y="680" width="370" height="40" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="680" width="370" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 700px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        column-count | column-width | column-gap | column-rule
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="704" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    column-count | column-width | column-gap | column-rule
                </text>
            </switch>
        </g>
        <rect x="1771" y="650" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 660px; margin-left: 1791px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                多列
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1791" y="663" fill="#000000" font-family="Comic Sans MS" font-size="10px" text-anchor="middle">
                    多列
                </text>
            </switch>
        </g>
        <path d="M 574.5 1065.63 L 533.37 1065.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 528.12 1065.63 L 535.12 1062.13 L 533.37 1065.63 L 535.12 1069.13 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 607 1080.63 L 607 1113.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1118.88 L 603.5 1111.88 L 607 1113.63 L 610.5 1111.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="574.5" y="1050.63" width="65" height="30" rx="4.5" ry="4.5" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="574.5" y="1050.63" width="65" height="30" rx="4.5" ry="4.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 57px; height: 1px; padding-top: 1066px; margin-left: 579px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                IP 查询
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="607" y="1069" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    IP 查询
                </text>
            </switch>
        </g>
        <rect x="377" y="1045.63" width="150" height="40" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="377" y="1045.63" width="150" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 1066px; margin-left: 382px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                Host 查询
                                <br/>
                                <div>
                                    <span>
                                        DNS 请求，解析
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="382" y="1069" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    Host 查询...
                </text>
            </switch>
        </g>
        <path d="M 307 1065.63 L 370.63 1065.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 375.88 1065.63 L 368.88 1069.13 L 370.63 1065.63 L 368.88 1062.13 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="77" y="1021.25" width="230" height="88.75" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="77" y="1021.25" width="230" height="88.75" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 222px; height: 1px; padding-top: 1066px; margin-left: 82px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div>
                                        <font face="Comic Sans MS" style="font-size: 12px">
                                            Domain Name System
                                        </font>
                                    </div>
                                    <div>
                                        <span>
                                            <font face="Comic Sans MS" style="font-size: 12px">
                                                - 递归解析
                                            </font>
                                        </span>
                                    </div>
                                    <div>
                                        <font face="Comic Sans MS" style="font-size: 12px">
                                            - 迭代解析
                                        </font>
                                    </div>
                                    <div>
                                        <font face="Comic Sans MS" style="font-size: 12px">
                                            -
                                            <font color="#ff8000" style="font-size: 12px">
                                                负载均衡
                                            </font>
                                        </font>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="82" y="1069" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    Domain Name System...
                </text>
            </switch>
        </g>
        <rect x="317" y="1045.63" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1056px; margin-left: 337px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    DNS
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="337" y="1059" fill="#000000" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    DNS
                </text>
            </switch>
        </g>
        <path d="M 192 987.5 L 192 1014.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 192 1020.13 L 188.5 1013.13 L 192 1014.88 L 195.5 1013.13 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="77" y="877.5" width="230" height="110" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="77" y="877.5" width="230" height="110" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 222px; height: 1px; padding-top: 933px; margin-left: 82px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px">
                                        <font face="Comic Sans MS">
                                            服务器无状态，负载均衡器根据节点负载情况，将请求合理转发到各个节点
                                        </font>
                                    </div>
                                    <div style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px">
                                        <font face="Comic Sans MS">
                                            算法：轮询、加权轮询、最少连接、加权最少连接、随机、IP HASH
                                        </font>
                                    </div>
                                    <div style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px">
                                        <font face="Comic Sans MS">
                                            转发：
                                            <font color="#ff8000">
                                                HTTP 重定向
                                            </font>
                                            、反向代理
                                        </font>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="82" y="936" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    服务器无状态，负载均衡器根据节点负载情况，将请求合理转发到各个节点算法：轮询、加权轮询、最少连接、加权最少连接、随机、IP HASH...
                </text>
            </switch>
        </g>
        <rect x="197" y="995" width="60" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1005px; margin-left: 227px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    负载均衡
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="227" y="1009" fill="#000000" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    负载均衡
                </text>
            </switch>
        </g>
        <path d="M 607 1160 L 607 1183.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1188.88 L 603.5 1181.88 L 607 1183.63 L 610.5 1181.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="570.75" y="1120" width="72.5" height="40" rx="6" ry="6" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="570.75" y="1120" width="72.5" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 71px; height: 1px; padding-top: 1140px; margin-left: 572px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                客户端发送
                                <font color="#ff8000">
                                    HTTP
                                </font>
                                请求
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="607" y="1144" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    客户端发送 HTTP 请求
                </text>
            </switch>
        </g>
        <path d="M 607 1230 L 607 1253.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1258.88 L 603.5 1251.88 L 607 1253.63 L 610.5 1251.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="557" y="1190" width="100" height="40" rx="6" ry="6" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="557" y="1190" width="100" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 92px; height: 1px; padding-top: 1210px; margin-left: 561px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                服务端处理请求
                                <br/>
                                返回 HTTP 响应
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="607" y="1214" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    服务端处理请求
返回 HTTP 响应
                </text>
            </switch>
        </g>
        <path d="M 302 1180 L 302 1150 Q 302 1140 312 1140 L 564.38 1140" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 569.63 1140 L 562.63 1143.5 L 564.38 1140 L 562.63 1136.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 302 1630 L 302 1703.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 302 1708.88 L 298.5 1701.88 L 302 1703.63 L 305.5 1701.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="77" y="1180" width="450" height="450" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 442px; height: 1px; padding-top: 1405px; margin-left: 82px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        方法：GET | POST | PUT | DELETE | OPTIONS | CONNECT | HEAD
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        <br/>
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        状态码：100 Info | 200 OK，204 No Content | 301 永久重定向 | 302 临时重定向 | 303 Get Other | 304 Not Modified | 400 请求报文错误 | 401 认证失败 | 403 请求被拒绝 | 404 Not Found | 500 服务端错误 | 501 服务端不支持 | 503 宕机
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        <br/>
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        Headers：
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        - Accept | Accept-Charset | Accept-Encoding | Accept-Language | Allow | Authorizatlion | Content-Type | Content-Length | Host | Referer | Server | Cache-Control : no-store 禁止缓存、no-cache 强制确认缓存、private 私有缓存、public 公有缓存
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        - 强缓存：Expires 、 Cache-Control max-age
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        - 协商缓存：Last-Modified 和 If-Modified-Since、ETag 和 If-None-Match
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        <br/>
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        HTTPS：HTTP + SSL 证书认证，非对称加密传输 Secret Key，再对称通信，更
                                        <font color="#ff8000" style="font-size: 12px">
                                            安全
                                        </font>
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        HTTP 1.1：长连接、多连接、分块传输
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        HTTP 2.0：
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        - 二进制传输，双向数据流，速度更快，数据量更大
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        - 支持服务端推送
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font face="Comic Sans MS" style="font-size: 12px">
                                        - 首部压缩
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="82" y="1409" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    方法：GET | POST | PUT | DELETE | OPTIONS | CONNECT | HEAD...
                </text>
            </switch>
        </g>
        <rect x="407" y="1120" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1130px; margin-left: 427px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000" style="font-size: 10px">
                                    HTTP
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="427" y="1134" fill="#FF8000" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    HTTP
                </text>
            </switch>
        </g>
        <path d="M 607 1300 L 607 1328.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1333.88 L 603.5 1326.88 L 607 1328.63 L 610.5 1326.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="557" y="1260" width="100" height="40" rx="6" ry="6" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="557" y="1260" width="100" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 92px; height: 1px; padding-top: 1280px; margin-left: 562px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                解析 HTML
                                <br/>
                                生成 DOM Tree
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="562" y="1284" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    解析 HTML...
                </text>
            </switch>
        </g>
        <path d="M 607 1375 L 607 1423.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1428.88 L 603.5 1421.88 L 607 1423.63 L 610.5 1421.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="557" y="1335" width="100" height="40" rx="6" ry="6" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="557" y="1335" width="100" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 92px; height: 1px; padding-top: 1355px; margin-left: 562px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                解析 CSS
                                <br/>
                                生成 CSSOM
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="562" y="1359" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    解析 CSS...
                </text>
            </switch>
        </g>
        <path d="M 607 1470 L 607 1493.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1498.88 L 603.5 1491.88 L 607 1493.63 L 610.5 1491.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="557" y="1430" width="100" height="40" rx="6" ry="6" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="557" y="1430" width="100" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 92px; height: 1px; padding-top: 1450px; margin-left: 562px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                生成 Render Object Tree
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="562" y="1454" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    生成 Render Object...
                </text>
            </switch>
        </g>
        <rect x="607" y="1390" width="90" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1400px; margin-left: 652px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    结合 DOM Tree
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="652" y="1404" fill="#000000" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    结合 DOM Tree
                </text>
            </switch>
        </g>
        <path d="M 607 1540 L 607 1563.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1568.88 L 603.5 1561.88 L 607 1563.63 L 610.5 1561.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="557" y="1500" width="100" height="40" rx="6" ry="6" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="557" y="1500" width="100" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 92px; height: 1px; padding-top: 1520px; margin-left: 561px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                布局与绘制
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="607" y="1524" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    布局与绘制
                </text>
            </switch>
        </g>
        <path d="M 607 1610 L 607 1633.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 607 1638.88 L 603.5 1631.88 L 607 1633.63 L 610.5 1631.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="542" y="1570" width="130" height="40" rx="6" ry="6" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="542" y="1570" width="130" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 122px; height: 1px; padding-top: 1590px; margin-left: 547px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                GPU 处理渲染图层与复合图层 Composite
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="547" y="1594" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    GPU 处理渲染图层与复合图层 Composite
                </text>
            </switch>
        </g>
        <path d="M 607 1670 L 607 1780 Q 607 1790 617 1790 L 967 1790 Q 977 1790 977 1800 L 977 1900 Q 977 1910 987 1910 L 1337 1910 Q 1347 1910 1347 1920 L 1347 2200 Q 1347 2210 1357 2210 L 1399.63 2210" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1404.88 2210 L 1397.88 2213.5 L 1399.63 2210 L 1397.88 2206.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="542" y="1640" width="130" height="30" rx="4.5" ry="4.5" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="542" y="1640" width="130" height="30" rx="4.5" ry="4.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 122px; height: 1px; padding-top: 1655px; margin-left: 546px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                展示页面
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="607" y="1659" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    展示页面
                </text>
            </switch>
        </g>
        <path d="M 727 1280 L 707 1280 Q 697 1280 697 1290 L 697 1460 Q 697 1470 687 1470 L 677 1470 Q 667 1470 677 1470 L 687 1470 Q 697 1470 697 1480 L 697 1650 Q 697 1660 707 1660 L 727 1660" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="translate(697,0)scale(-1,1)translate(-697,0)" pointer-events="all"/>
        <rect x="717" y="1390" width="200" height="160" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="717" y="1390" width="200" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 192px; height: 1px; padding-top: 1470px; margin-left: 722px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <font style="font-size: 12px">
                                    页面加载事件：
                                    <br/>
                                    - readyStateChange
                                    <br/>
                                    - DOMContentLoad
                                    <br/>
                                    - load
                                    <br/>
                                    页面关闭事件：
                                    <br/>
                                </font>
                                - beforunload
                                <br/>
                                - unload
                                <br/>
                                - 关闭时发送请求，Fetch 设置 keepAlive 或者 SendBeacon
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="722" y="1474" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    页面加载事件：  - readyStateChange...
                </text>
            </switch>
        </g>
        <path d="M 1330.63 818.92 L 1356.57 818.88 Q 1366.57 818.86 1366.57 808.86 L 1366.57 767.86 Q 1366.57 757.86 1376.57 757.87 L 1398.93 757.9" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1404.18 757.91 L 1397.18 761.4 L 1398.93 757.9 L 1397.19 754.4 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1327.66 877.51 L 1357 877.56 Q 1367 877.57 1367 867.79 L 1367 862.89 Q 1367 858 1377 858.01 L 1398.58 858.02" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1403.83 858.02 L 1396.83 861.52 L 1398.58 858.02 L 1396.83 854.52 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1327 910 L 1397 910 Q 1407 910 1407 920 L 1407 925 Q 1407 930 1417 930 L 1568.86 930 Q 1578.86 930 1578.87 940 L 1578.89 951.71" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1578.9 956.96 L 1575.39 949.97 L 1578.89 951.71 L 1582.39 949.96 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1327 930 L 1377 930 Q 1387 930 1387 940 L 1387 1305.14 Q 1387 1315.14 1396.34 1315.13 L 1405.68 1315.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1410.93 1315.12 L 1403.94 1318.63 L 1405.68 1315.13 L 1403.93 1311.63 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1327 950 L 1357 950 Q 1367 950 1367 960 L 1367 1427.29 Q 1367 1437.29 1377 1437.29 L 1399.63 1437.31" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1404.88 1437.31 L 1397.88 1440.8 L 1399.63 1437.31 L 1397.88 1433.8 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1327 1000 L 1337 1000 Q 1347 1000 1347 1010 L 1347 1585 Q 1347 1595 1357 1594.99 L 1397.53 1594.96" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1402.78 1594.96 L 1395.78 1598.47 L 1397.53 1594.96 L 1395.78 1591.47 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="997" y="705" width="330" height="465" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="997" y="705" width="330" height="465" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 322px; height: 1px; padding-top: 938px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                重绘：外观改变而不影响布局
                                <br/>
                                - 界面：color、out-line、background、filter、opacity ...
                                <br/>
                                - 文字：text、font、word
                                <br/>
                                回流(重排)：布局或几何属性的改变，以及获取布局信息
                                <br/>
                                - 布局：display、float、position
                                <br/>
                                - 尺寸：width、height、margin、padding、border
                                <br/>
                                - 获取布局信息：offsetTop、scrollTop、clientTop、
                                <font color="#ff8000">
                                    getComputedStyle
                                </font>
                                、
                                <font color="#ff8000">
                                    getBoundingClientRect
                                </font>
                                ...
                                <br/>
                                <br/>
                                回流必定重绘，重绘不一定回流，而且与 Event Loop 有关
                                <br/>
                                - 执行完 microtasks，判断 document 是否需要更新
                                <br/>
                                - 判断是否有 resize、scroll 事件，自带
                                <font color="#ff8000">
                                    节流
                                </font>
                                <br/>
                                - 判断是否触发
                                <font color="#ff8000">
                                    Media Query
                                </font>
                                <br/>
                                - 更新动画
                                <br/>
                                - 判断全屏事件
                                <br/>
                                - 执行
                                <font color="#ff8000">
                                    requestAnimationFrame
                                </font>
                                回调
                                <br/>
                                - 执行
                                <font color="#ff8000">
                                    IntersectionObserver
                                </font>
                                、
                                <font color="#ff8000">
                                    MutationObserver
                                </font>
                                回调
                                <br/>
                                <br/>
                                <i>
                                    <font color="#b3b3b3">
                                    </font>
                                    <font color="#808080">
                                        [以上是一帧]
                                    </font>
                                </i>
                                <br/>
                                <br/>
                                - 有空闲时间的话，执行
                                <font color="#ff8000">
                                    requestIdleCallback
                                </font>
                                <br/>
                                <br/>
                                优化：
                                <br/>
                                - transform 替代定位
                                <br/>
                                - visibility 替代 display: none
                                <br/>
                                - 减少 DOM 操作
                                <br/>
                                - 避免 Table 布局
                                <br/>
                                - 使用 requestAnimationFrame
                                <br/>
                                - 将节点变为复合图层
                                <br/>
                                -
                                <font color="#ff8000">
                                    CSS3 3D、CSS3 filter、CSS3 动画
                                </font>
                                <br/>
                                - &lt;video&gt;、&lt;
                                <font color="#ff8000">
                                    canvas
                                </font>
                                &gt;、&lt;iframe&gt;
                                <br/>
                                - will-change：最后的优化手段
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="941" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    重绘：外观改变而不影响布局  - 界面：color、out-line、background、filter、opacity ......
                </text>
            </switch>
        </g>
        <rect x="937" y="710" width="60" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 720px; margin-left: 967px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000" style="font-size: 10px">
                                    重绘回流
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="967" y="724" fill="#FF8000" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    重绘回流
                </text>
            </switch>
        </g>
        <path d="M 1162 1535 L 1162 1573.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1162 1578.88 L 1158.5 1571.88 L 1162 1573.63 L 1165.5 1571.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 997 1500 L 987 1500 Q 977 1500 977 1510 L 977 1700 Q 977 1710 987 1710 L 1155 1710 Q 1165 1710 1164.99 1715.22 L 1164.98 1720.43" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1164.97 1725.68 L 1161.48 1718.68 L 1164.98 1720.43 L 1168.48 1718.69 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="997" y="1215" width="330" height="320" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="997" y="1215" width="330" height="320" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 322px; height: 1px; padding-top: 1375px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                Web Workers：运行在后台线程，不阻塞 UI，但也不能操作 DOM
                                <br/>
                                Worker：new Workder('worker.js')
                                <br/>
                                - onmessage、postmessage
                                <br/>
                                - terminate 、
                                <span>
                                    close
                                </span>
                                <br/>
                                Shared Workers：同源共享
                                <br/>
                                -
                                <span class="token function-variable function" style="box-sizing: border-box">
                                    onconnect
                                    <br/>
                                    - port.start 主线程与 worker 双通信
                                    <br/>
                                    - post.onmessage、port.postmessage
                                    <br/>
                                    Service Worker：
                                    <br/>
                                    - 作为 web 应用、浏览器、网络之间的代理服务器
                                    <br/>
                                    - 只能有 HTTPS 承载
                                    <br/>
                                    - 常用于
                                    <font color="#ff8000">
                                        PWA
                                    </font>
                                    离线工作
                                    <br/>
                                    <br/>
                                    数据：主线程与 worker 之间传递的数据不共享同一实例，通过
                                    <font color="#ff8000">
                                        深拷贝
                                    </font>
                                    的方式传递
                                    <br/>
                                    - 结构化拷贝
                                    <br/>
                                    - error、function、dom 抛出异常
                                    <br/>
                                    - 对象的
                                    <font color="#ff8000">
                                        getter、setter
                                    </font>
                                    不保留
                                    <br/>
                                    - 原型链上的属性不拷贝
                                    <br/>
                                </span>
                                <span>
                                </span>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="1379" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    Web Workers：运行在后台线程，不阻塞 UI，但也不能操作 DOM...
                </text>
            </switch>
        </g>
        <rect x="977" y="1190" width="80" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1200px; margin-left: 1017px;">
                        <div data-drawio-colors="color: #808080; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(128, 128, 128); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000" style="font-size: 10px">
                                    Web Workers
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1017" y="1204" fill="#808080" font-family="Comic Sans MS" font-size="12px" text-anchor="middle">
                    Web Workers
                </text>
            </switch>
        </g>
        <path d="M 817 1770 L 817 1800 Q 817 1810 807 1810 L 773.29 1810 Q 763.29 1810 763.29 1820 L 763.29 1843.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 763.29 1848.88 L 759.79 1841.88 L 763.29 1843.63 L 766.79 1841.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 717 1710 L 567 1710 Q 557 1710 557 1720 L 557 1900 Q 557 1910 547 1910 L 315 1910 Q 305 1910 305 1920 L 305 1933.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 305 1938.88 L 301.5 1931.88 L 305 1933.63 L 308.5 1931.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="717" y="1600" width="200" height="170" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="717" y="1600" width="200" height="170" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 192px; height: 1px; padding-top: 1685px; margin-left: 722px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <font style="font-size: 12px ; background-color: rgb(255 , 255 , 255)">
                                    setTimeout 只会向队列中添加一次
                                    <br/>
                                    setInterval 是每隔一段时间将任务添加到队列，可能会造成性能问题，
                                    <br/>
                                    - 不考虑函数的是否正在执行
                                    <br/>
                                    - 队列中存在且未执行，则下次再添加
                                    <br/>
                                    setInterval 常用 setTimeout 替代，用 requestAnimationFrame 也可
                                    <br/>
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="722" y="1689" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    setTimeout 只会向队列中添加一次...
                </text>
            </switch>
        </g>
        <rect x="837" y="1560" width="50" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1570px; margin-left: 862px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000" style="font-size: 10px">
                                    定时器
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="862" y="1574" fill="#FF8000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    定时器
                </text>
            </switch>
        </g>
        <rect x="570.75" y="1850" width="385" height="680" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 377px; height: 1px; padding-top: 2190px; margin-left: 576px;">
                        <div data-drawio-colors="color: #ffffff; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="color: rgb(248 , 248 , 242) ; line-height: 19px">
                                    <div>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            class
                                        </span>
                                        <span style="color: rgb(139 , 233 , 253)">
                                            Timer
                                        </span>
                                        {
                                    </div>
                                    <div>
                                        <span style="color: #ff79c6">
                                            static
                                        </span>
                                        <span style="color: #50fa7b">
                                            base
                                        </span>
                                        (
                                        <span style="color: #ffb86c ; font-style: italic">
                                            handler
                                        </span>
                                        ,
                                        <span style="color: #ffb86c ; font-style: italic">
                                            timeout
                                        </span>
                                        ,
                                        <span style="color: #ffb86c ; font-style: italic">
                                            args
                                        </span>
                                        ,
                                        <span style="color: #ffb86c ; font-style: italic">
                                            loop
                                        </span>
                                        ) {
                                    </div>
                                    <div>
                                        <span style="color: #ff79c6">
                                            let
                                        </span>
                                        timeStamp
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #8be9fd ; font-style: italic">
                                            Date
                                        </span>
                                        .
                                        <span style="color: #50fa7b">
                                            now
                                        </span>
                                        ();
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            const
                                        </span>
                                        timer
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        {
                                    </div>
                                    <div>
                                        value
                                        <span style="color: #ff79c6">
                                            :
                                        </span>
                                        <span style="color: #ff79c6">
                                            -
                                        </span>
                                        <span style="color: #bd93f9">
                                            1
                                        </span>
                                        ,
                                    </div>
                                    <div>
                                        <span style="color: #50fa7b">
                                            valueOf
                                        </span>
                                        <span style="color: #ff79c6">
                                            :
                                        </span>
                                        <span style="color: #ff79c6">
                                            function
                                        </span>
                                        () {
                                    </div>
                                    <div>
                                        <span style="color: #ff79c6">
                                            return
                                        </span>
                                        <span style="color: #bd93f9 ; font-style: italic">
                                            this
                                        </span>
                                        .value;
                                    </div>
                                    <div>
                                        },
                                    </div>
                                    <div>
                                        };
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            const
                                        </span>
                                        <span style="color: #50fa7b">
                                            callback
                                        </span>
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        ()
                                        <span style="color: #ff79c6">
                                            =&gt;
                                        </span>
                                        {
                                    </div>
                                    <div>
                                        <span style="color: #ff79c6">
                                            if
                                        </span>
                                        (
                                        <span style="color: #8be9fd ; font-style: italic">
                                            Date
                                        </span>
                                        .
                                        <span style="color: #50fa7b">
                                            now
                                        </span>
                                        ()
                                        <span style="color: #ff79c6">
                                            -
                                        </span>
                                        timeStamp
                                        <span style="color: #ff79c6">
                                            &gt;=
                                        </span>
                                        timeout) {
                                    </div>
                                    <div>
                                        handler.
                                        <span style="color: #50fa7b">
                                            apply
                                        </span>
                                        (callback, args);
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            if
                                        </span>
                                        (loop) {
                                    </div>
                                    <div>
                                        timeStamp
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #8be9fd ; font-style: italic">
                                            Date
                                        </span>
                                        .
                                        <span style="color: #50fa7b">
                                            now
                                        </span>
                                        ();
                                    </div>
                                    <div>
                                        timer.value
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #50fa7b">
                                            requestAnimationFrame
                                        </span>
                                        (callback);
                                    </div>
                                    <div>
                                        }
                                    </div>
                                    <div>
                                        }
                                        <span style="color: #ff79c6">
                                            else
                                        </span>
                                        timer.value
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #50fa7b">
                                            requestAnimationFrame
                                        </span>
                                        (callback);
                                    </div>
                                    <div>
                                        };
                                    </div>
                                    <br/>
                                    <div>
                                        timer.value
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #50fa7b">
                                            requestAnimationFrame
                                        </span>
                                        (callback);
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            return
                                        </span>
                                        timer;
                                    </div>
                                    <div>
                                        }
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            static
                                        </span>
                                        <span style="color: #50fa7b">
                                            setTimeout
                                        </span>
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        (
                                        <span style="color: #ffb86c ; font-style: italic">
                                            handler
                                        </span>
                                        ,
                                        <span style="color: #ffb86c ; font-style: italic">
                                            timeout
                                        </span>
                                        ,
                                        <span style="color: #ff79c6">
                                            ...
                                        </span>
                                        <span style="color: #ffb86c ; font-style: italic">
                                            args
                                        </span>
                                        )
                                        <span style="color: #ff79c6">
                                            =&gt;
                                        </span>
                                    </div>
                                    <div>
                                        Timer.
                                        <span style="color: #50fa7b">
                                            base
                                        </span>
                                        (handler, timeout, args);
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            static
                                        </span>
                                        <span style="color: #50fa7b">
                                            setInterval
                                        </span>
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        (
                                        <span style="color: #ffb86c ; font-style: italic">
                                            handler
                                        </span>
                                        ,
                                        <span style="color: #ffb86c ; font-style: italic">
                                            timeout
                                        </span>
                                        ,
                                        <span style="color: #ff79c6">
                                            ...
                                        </span>
                                        <span style="color: #ffb86c ; font-style: italic">
                                            args
                                        </span>
                                        )
                                        <span style="color: #ff79c6">
                                            =&gt;
                                        </span>
                                    </div>
                                    <div>
                                        Timer.
                                        <span style="color: #50fa7b">
                                            base
                                        </span>
                                        (handler, timeout, args,
                                        <span style="color: #bd93f9">
                                            true
                                        </span>
                                        );
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            static
                                        </span>
                                        <span style="color: #50fa7b">
                                            clear
                                        </span>
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        (
                                        <span style="color: #ffb86c ; font-style: italic">
                                            timer
                                        </span>
                                        )
                                        <span style="color: #ff79c6">
                                            =&gt;
                                        </span>
                                        <span style="color: #50fa7b">
                                            cancelAnimationFrame
                                        </span>
                                        (timer);
                                    </div>
                                    <div>
                                        }
                                    </div>
                                </div>
                                <p></p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="576" y="2194" fill="#ffffff" font-family="Comic Sans MS" font-size="12px">
                    class Timer {...
                </text>
            </switch>
        </g>
        <path d="M 1756 758.14 L 1807 758.14 Q 1817 758.14 1817 768.14 L 1817 776.57 Q 1817 785 1823.82 785 L 1830.63 785" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 785 L 1828.88 788.5 L 1830.63 785 L 1828.88 781.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1756 780 L 1787 780 Q 1797 780 1797 790 L 1797 935 Q 1797 945 1807 945 L 1830.63 945" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 945 L 1828.88 948.5 L 1830.63 945 L 1828.88 941.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1406" y="705" width="350" height="106.25" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="705" width="350" height="106.25" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 758px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        getComputedStyle：获取元素计算属性，第二个参数可指定
                                        <font color="#ff8000" style="font-size: 12px">
                                            伪元素
                                        </font>
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - getPropertyValue
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        getBoundingClientRect：获取元素大小及相对视口的位置，width、height、left、right、top、bottom ...
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="762" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    getComputedStyle：获取元素计算属性，第二个参数可指定伪元素...
                </text>
            </switch>
        </g>
        <rect x="1837" y="761.25" width="370" height="50" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="761.25" width="370" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 786px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        标准盒模型：content-box
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        IE 盒模型：border-box，包括 padding、margin、border
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="790" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    标准盒模型：content-box...
                </text>
            </switch>
        </g>
        <rect x="1406" y="960" width="350" height="240" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="960" width="350" height="240" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 1080px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        自适应：不同大小终端自适应显示
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - vw、vh、vmin、vmax、%、rem
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        响应式：不同终端不同展示方式
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - &lt;meta viewport="" /&gt;
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - @media sceen
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - add、or、not，min-width、max-width、min-device-pixel-radio
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - px：图像显示基本单元，不确定物理量也不是一个点。抽象概念，表示设备独立像素或逻辑像素（dpi）
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - pt：绝对单位，1pt = 1/72(英寸)
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - dpr：设备像素比，物理像素 / 逻辑像素
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - ppi：像素密度
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="1084" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    自适应：不同大小终端自适应显示  - vw、vh、vmin、vmax、%、rem...
                </text>
            </switch>
        </g>
        <rect x="1766" y="730" width="50" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 740px; margin-left: 1791px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    盒模型
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1791" y="744" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    盒模型
                </text>
            </switch>
        </g>
        <path d="M 1756 860 L 1767 860 Q 1777 860 1777 870 L 1777 1061.14 Q 1777 1071.14 1787 1071.16 L 1829.52 1071.22" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1834.77 1071.23 L 1827.77 1074.72 L 1829.52 1071.22 L 1827.78 1067.72 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1406" y="830" width="350" height="60" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="830" width="350" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 860px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        防抖：函数在某个时间段内只执行一次
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        节流：函数每隔一段时间执行一次，多余过滤
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        实现：定时器 +
                                        <font color="#ff8000" style="font-size: 12px">
                                            闭包
                                        </font>
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="864" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    防抖：函数在某个时间段内只执行一次节流：函数每隔一段时间执行一次，多余过滤实现：定时器 + 闭包...
                </text>
            </switch>
        </g>
        <rect x="1411" y="1250" width="350" height="110" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1411" y="1250" width="350" height="110" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 1305px; margin-left: 1416px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        requestAnimationFrame、cancelAnimationFrame
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <div style="line-height: 19px">
                                        <div>
                                            <font style="font-size: 12px">
                                                - 重绘之前调用回调函数
                                            </font>
                                        </div>
                                        <div>
                                            <font style="font-size: 12px">
                                                - 与屏幕刷新评率有关，电脑越好性能越佳
                                            </font>
                                        </div>
                                        <div>
                                            <font style="font-size: 12px">
                                                - 精度高，1ms
                                            </font>
                                        </div>
                                        <div>
                                            <font style="font-size: 12px">
                                                - 运行在后台标签页或者隐藏的 &lt;iframe&gt; 里时，会被暂停调用
                                            </font>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1416" y="1309" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    requestAnimationFrame、cancelAnimationFrame...
                </text>
            </switch>
        </g>
        <rect x="1406" y="1400" width="350" height="70" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="1400" width="350" height="70" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 1435px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        IntersectionObserver：元素与其祖先元素或顶级文档与视口的交叉状态
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        MutationObserver：监听 DOM Tree 的更改
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="1439" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    IntersectionObserver：元素与其祖先元素或顶级文档与视口的交叉状态...
                </text>
            </switch>
        </g>
        <path d="M 1756 1590 L 1767 1590 Q 1777 1590 1777 1600 L 1777 2400 Q 1777 2410 1767 2410 L 1587.29 2410 Q 1577.29 2410 1577.29 2420 L 1577.31 2447.85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1577.31 2453.1 L 1573.81 2446.1 L 1577.31 2447.85 L 1580.81 2446.1 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1406" y="1510" width="350" height="160" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="1510" width="350" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 1590px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        requestIdleCallback：在 Event Lopp 间隙调用 callback，传入 IdleDeadline
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - IdleDeadLine.didTimOut 函数是否执行
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - IdleDeadLine.timeRemaining() 剩余时间
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <div style="line-height: 19px">
                                        <div>
                                            <font style="font-size: 12px">
                                                <span style="font-weight: bold">
                                                    React
                                                </span>
                                                实现了自己的一套 requestIdleCallback，
                                                <span style="font-weight: bold">
                                                    Schedular
                                                </span>
                                                +
                                                <span style="font-weight: bold">
                                                    Lane
                                                </span>
                                            </font>
                                        </div>
                                        <div>
                                            <font style="font-size: 12px">
                                                - 处理兼容
                                            </font>
                                        </div>
                                        <div>
                                            <font style="font-size: 12px">
                                                - 多平台
                                            </font>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="1594" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    requestIdleCallback：在 Event Lopp 间隙调用 callback，传入 IdleDeadline...
                </text>
            </switch>
        </g>
        <rect x="1837" y="840" width="370" height="160" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="840" width="370" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 920px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        基本选择器：通配符 *、元素、id、class、属性[attr=*]
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        分组选择器：A,B
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        组合选择器：后代 A B、子代 A &gt; B，相邻 A + B、兄弟 A ~ B
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        伪选择器：
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 伪类，未包含在文档中的状态信息。:active、:hover、:checked、:nth-child、:first-child
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 伪元素，无法用 HTML 表达的实体。::before、::after、::selection
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="924" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    基本选择器：通配符 *、元素、id、class、属性[attr=*]...
                </text>
            </switch>
        </g>
        <rect x="1787" y="860" width="50" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 870px; margin-left: 1812px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                选择器
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1812" y="873" fill="#000000" font-family="Helvetica" font-size="10px" text-anchor="middle">
                    选择器
                </text>
            </switch>
        </g>
        <path d="M 2207 1067.86 L 2227 1067.86 Q 2237 1067.86 2237 1077.86 L 2237 2080 Q 2237 2090 2227 2090 L 2032 2090 Q 2022 2090 2022 2100 L 2022 2110.81" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2022 2116.06 L 2018.5 2109.06 L 2022 2110.81 L 2025.5 2109.06 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2024.22 1089.65 L 2024.18 1100 Q 2024.14 1110 2014.14 1110 L 1807 1110 Q 1797 1110 1797 1120 L 1797 1475 Q 1797 1485 1807 1485 L 1812 1485 Q 1817 1485 1817 1495 L 1817 1970 Q 1817 1980 1823.82 1980 L 1830.63 1980" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 1980 L 1828.88 1983.5 L 1830.63 1980 L 1828.88 1976.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1837" y="1045.63" width="370" height="44.37" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="1045.63" width="370" height="44.37" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 1068px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                闭包：函数内部可访问外部变量，内部作用域不会消失，变量不会被
                                <font color="#ff8000">
                                    垃圾回收
                                </font>
                                ，容易造成内存泄漏
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="1071" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    闭包：函数内部可访问外部变量，内部作用域不会消失，变量不会被垃圾回收，容易造成内存泄漏
                </text>
            </switch>
        </g>
        <rect x="1406" y="2458" width="370" height="630" fill="#000000" stroke="none" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="2458" width="370" height="630" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 2773px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div style="color: rgb(248 , 248 , 242) ; line-height: 19px">
                                        <div>
                                            <span style="color: rgb(255 , 121 , 198)">
                                                const
                                            </span>
                                            <span style="color: rgb(80 , 250 , 123)">
                                                handleCallback
                                            </span>
                                            <span style="color: rgb(255 , 121 , 198)">
                                                =
                                            </span>
                                            (
                                            <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                                idleDeadline
                                            </span>
                                            )
                                            <span style="color: rgb(255 , 121 , 198)">
                                                =&gt;
                                            </span>
                                            {
                                        </div>
                                        <div>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (idleDeadline.didTimeout);
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #ff79c6">
                                                if
                                            </span>
                                            (idleDeadline.
                                            <span style="color: #50fa7b">
                                                timeRemaining
                                            </span>
                                            ()
                                            <span style="color: #ff79c6">
                                                &lt;
                                            </span>
                                            <span style="color: #bd93f9">
                                                10
                                            </span>
                                            )
                                        </div>
                                        <div>
                                            <span style="color: #ff79c6">
                                                return
                                            </span>
                                            <span style="color: #50fa7b">
                                                requestIdleCallback
                                            </span>
                                            (handleCallback);
                                        </div>
                                        <br/>
                                        <div>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                free callback start
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            );
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #8be9fd">
                                                setTimeout
                                            </span>
                                            (()
                                            <span style="color: #ff79c6">
                                                =&gt;
                                            </span>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                time in requestIdleCallback
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            ));
                                        </div>
                                        <br/>
                                        <div>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                free callback end
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            );
                                        </div>
                                        <div>
                                            };
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #ff79c6">
                                                const
                                            </span>
                                            <span style="color: #50fa7b">
                                                work
                                            </span>
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            ()
                                            <span style="color: #ff79c6">
                                                =&gt;
                                            </span>
                                            {
                                        </div>
                                        <div>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                start
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            );
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #50fa7b">
                                                requestIdleCallback
                                            </span>
                                            (handleCallback);
                                        </div>
                                        <br/>
                                        <div>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                mid
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            );
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #8be9fd">
                                                setTimeout
                                            </span>
                                            (()
                                            <span style="color: #ff79c6">
                                                =&gt;
                                            </span>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                time delay 1ms
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            ));
                                        </div>
                                        <div>
                                            <span style="color: #8be9fd">
                                                setTimeout
                                            </span>
                                            (()
                                            <span style="color: #ff79c6">
                                                =&gt;
                                            </span>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                time delay 10ms
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            ),
                                            <span style="color: #bd93f9">
                                                10
                                            </span>
                                            );
                                        </div>
                                        <div>
                                            <span style="color: #8be9fd">
                                                setTimeout
                                            </span>
                                            (()
                                            <span style="color: #ff79c6">
                                                =&gt;
                                            </span>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                time after style delay 1s
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            ),
                                            <span style="color: #bd93f9">
                                                1000
                                            </span>
                                            );
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #50fa7b">
                                                requestIdleCallback
                                            </span>
                                            (()
                                            <span style="color: #ff79c6">
                                                =&gt;
                                            </span>
                                            {
                                        </div>
                                        <div>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                free 2
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            );
                                        </div>
                                        <div>
                                            });
                                        </div>
                                        <br/>
                                        <div>
                                            console.
                                            <span style="color: #50fa7b">
                                                log
                                            </span>
                                            (
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            <span style="color: #f1fa8c">
                                                end
                                            </span>
                                            <span style="color: #e9f284">
                                                '
                                            </span>
                                            );
                                        </div>
                                        <div>
                                            };
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: rgb(80 , 250 , 123)">
                                                work
                                            </span>
                                            ();
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="2777" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    const handleCallback = (idleDeadline) =&gt; {...
                </text>
            </switch>
        </g>
        <rect x="1827" y="2117.18" width="400" height="1062.82" fill="#000000" stroke="none" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1827" y="2117.18" width="400" height="1062.82" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 392px; height: 1px; padding-top: 2649px; margin-left: 1832px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="color: rgb(248 , 248 , 242) ; line-height: 19px">
                                    <div>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            const
                                        </span>
                                        <span style="color: rgb(80 , 250 , 123)">
                                            debounce
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =
                                        </span>
                                        (
                                        <span style="color: rgb(80 , 250 , 123)">
                                            fn
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =
                                        </span>
                                        ()
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =&gt;
                                        </span>
                                        {},
                                        <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                            wait
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =
                                        </span>
                                        <span style="color: rgb(189 , 147 , 249)">
                                            0
                                        </span>
                                        ,
                                        <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                            immediate
                                        </span>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =
                                        </span>
                                        <span style="color: rgb(189 , 147 , 249)">
                                            false
                                        </span>
                                        )
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =&gt;
                                        </span>
                                        {
                                    </div>
                                    <div>
                                        <span style="color: #ff79c6">
                                            let
                                        </span>
                                        timer, context;
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            const
                                        </span>
                                        <span style="color: #50fa7b">
                                            later
                                        </span>
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        (
                                        <span style="color: #ff79c6">
                                            ...
                                        </span>
                                        <span style="color: #ffb86c ; font-style: italic">
                                            args
                                        </span>
                                        )
                                        <span style="color: #ff79c6">
                                            =&gt;
                                        </span>
                                        {
                                    </div>
                                    <div>
                                        timer
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #8be9fd">
                                            setTimeout
                                        </span>
                                        (()
                                        <span style="color: #ff79c6">
                                            =&gt;
                                        </span>
                                        {
                                    </div>
                                    <div>
                                        <span style="color: #ff79c6">
                                            !
                                        </span>
                                        immediate
                                        <span style="color: #ff79c6">
                                            &amp;&amp;
                                        </span>
                                        fn.
                                        <span style="color: #50fa7b">
                                            apply
                                        </span>
                                        (context, args);
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #8be9fd">
                                            clearTimeout
                                        </span>
                                        (timer);
                                    </div>
                                    <div>
                                        timer
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #bd93f9">
                                            null
                                        </span>
                                        ;
                                    </div>
                                    <div>
                                        }, wait);
                                    </div>
                                    <div>
                                        };
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            return
                                        </span>
                                        <span style="color: #ff79c6">
                                            function
                                        </span>
                                        (
                                        <span style="color: #ff79c6">
                                            ...
                                        </span>
                                        <span style="color: #ffb86c ; font-style: italic">
                                            args
                                        </span>
                                        ) {
                                    </div>
                                    <div>
                                        context
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #bd93f9 ; font-style: italic">
                                            this
                                        </span>
                                        ;
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #ff79c6">
                                            if
                                        </span>
                                        (
                                        <span style="color: #ff79c6">
                                            !
                                        </span>
                                        timer) immediate
                                        <span style="color: #ff79c6">
                                            &amp;&amp;
                                        </span>
                                        fn.
                                        <span style="color: #50fa7b">
                                            apply
                                        </span>
                                        (
                                        <span style="color: #bd93f9 ; font-style: italic">
                                            this
                                        </span>
                                        , args);
                                    </div>
                                    <div>
                                        <span style="color: #ff79c6">
                                            else
                                        </span>
                                        <span style="color: #8be9fd">
                                            clearTimeout
                                        </span>
                                        (timer);
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #50fa7b">
                                            later
                                        </span>
                                        (
                                        <span style="color: #ff79c6">
                                            ...
                                        </span>
                                        args);
                                    </div>
                                    <div>
                                        };
                                    </div>
                                    <div>
                                        };
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        <div style="line-height: 19px">
                                            <div>
                                                <span style="color: #ff79c6">
                                                    const
                                                </span>
                                                <span style="color: #50fa7b">
                                                    throttle
                                                </span>
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                (
                                            </div>
                                            <div>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    fn
                                                </span>
                                                ,
                                            </div>
                                            <div>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    wait
                                                </span>
                                                ,
                                            </div>
                                            <div>
                                                {
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    leading
                                                </span>
                                                ,
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    trailing
                                                </span>
                                                }
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                {
                                            </div>
                                            <div>
                                                leading
                                                <span style="color: #ff79c6">
                                                    :
                                                </span>
                                                <span style="color: #bd93f9">
                                                    true
                                                </span>
                                                ,
                                            </div>
                                            <div>
                                                trailing
                                                <span style="color: #ff79c6">
                                                    :
                                                </span>
                                                <span style="color: #bd93f9">
                                                    false
                                                </span>
                                                ,
                                            </div>
                                            <div>
                                                }
                                            </div>
                                            <div>
                                                )
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                                {
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    let
                                                </span>
                                                timer,
                                            </div>
                                            <div>
                                                context,
                                            </div>
                                            <div>
                                                lastTime
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                <span style="color: #bd93f9">
                                                    0
                                                </span>
                                                ;
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    const
                                                </span>
                                                <span style="color: #50fa7b">
                                                    later
                                                </span>
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                (
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    args
                                                </span>
                                                )
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                                {
                                            </div>
                                            <div>
                                                fn.
                                                <span style="color: #50fa7b">
                                                    apply
                                                </span>
                                                (context,
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                args);
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #8be9fd">
                                                    clearTimeout
                                                </span>
                                                (timer);
                                            </div>
                                            <div>
                                                timer
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                <span style="color: #bd93f9">
                                                    null
                                                </span>
                                                ;
                                            </div>
                                            <div>
                                                lastTime
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                <span style="color: #8be9fd ; font-style: italic">
                                                    Date
                                                </span>
                                                .
                                                <span style="color: #50fa7b">
                                                    now
                                                </span>
                                                ();
                                            </div>
                                            <div>
                                                };
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    return
                                                </span>
                                                <span style="color: #ff79c6">
                                                    function
                                                </span>
                                                (
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    args
                                                </span>
                                                ) {
                                            </div>
                                            <div>
                                                context
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                <span style="color: #bd93f9 ; font-style: italic">
                                                    this
                                                </span>
                                                ;
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    const
                                                </span>
                                                time
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                <span style="color: #8be9fd ; font-style: italic">
                                                    Date
                                                </span>
                                                .
                                                <span style="color: #50fa7b">
                                                    now
                                                </span>
                                                ();
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    if
                                                </span>
                                                (
                                                <span style="color: #ff79c6">
                                                    !
                                                </span>
                                                timer
                                                <span style="color: #ff79c6">
                                                    &amp;&amp;
                                                </span>
                                                trailing) lastTime
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                time;
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    const
                                                </span>
                                                delay
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                wait
                                                <span style="color: #ff79c6">
                                                    -
                                                </span>
                                                (time
                                                <span style="color: #ff79c6">
                                                    -
                                                </span>
                                                lastTime);
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    if
                                                </span>
                                                (leading
                                                <span style="color: #ff79c6">
                                                    &amp;&amp;
                                                </span>
                                                delay
                                                <span style="color: #ff79c6">
                                                    &lt;=
                                                </span>
                                                <span style="color: #bd93f9">
                                                    0
                                                </span>
                                                )
                                                <span style="color: #50fa7b">
                                                    later
                                                </span>
                                                (
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                args);
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    else
                                                </span>
                                                <span style="color: #ff79c6">
                                                    if
                                                </span>
                                                (
                                                <span style="color: #ff79c6">
                                                    !
                                                </span>
                                                timer
                                                <span style="color: #ff79c6">
                                                    &amp;&amp;
                                                </span>
                                                trailing) {
                                            </div>
                                            <div>
                                                timer
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                <span style="color: #8be9fd">
                                                    setTimeout
                                                </span>
                                                (()
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                                <span style="color: #50fa7b">
                                                    later
                                                </span>
                                                (
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                args), delay);
                                            </div>
                                            <div>
                                                }
                                            </div>
                                            <div>
                                                };
                                            </div>
                                            <div>
                                                };
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1832" y="2652" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    const debounce = (fn = () =&gt; {}, wait = 0, immediate = false) =&gt;...
                </text>
            </switch>
        </g>
        <path d="M 912 1190 L 1364 1190 Q 1374 1190 1374 1200 L 1374 1210 Q 1374 1220 1384 1220 L 1830.63 1220" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 1220 L 1828.88 1223.5 L 1830.63 1220 L 1828.88 1216.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 912 1130 L 947 1130 Q 957 1130 957 1140 L 957 1550 Q 957 1560 967 1560 L 1367 1560 Q 1377 1560 1377 1550 L 1377 1500 Q 1377 1490 1387 1490 L 1787 1490 Q 1797 1490 1797 1500 L 1797 1540 Q 1797 1550 1807 1550 L 1830.63 1550" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 1550 L 1828.88 1553.5 L 1830.63 1550 L 1828.88 1546.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="712" y="1085.32" width="200" height="234.68" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="712" y="1085.32" width="200" height="234.68" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 192px; height: 1px; padding-top: 1203px; margin-left: 717px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <font style="font-size: 12px ; background-color: rgb(255 , 255 , 255)">
                                    Js
                                    <font color="#ff8000">
                                        执行环境
                                    </font>
                                    会被加入
                                    <font color="#ff8000">
                                        执行栈
                                    </font>
                                    <br/>
                                    异步任务会被推入 Tasks 队列
                                    <br/>
                                    microtask：
                                    <font color="#ff8000">
                                        Promise
                                    </font>
                                    、setImmediate、IntersectionObserver、MutationObserver
                                    <br/>
                                    macrotask：script、setTimeout、setInterval、Event
                                    <br/>
                                    <br/>
                                    - 执行栈为空，从事件队列取任务加入执行栈
                                    <br/>
                                    - 执行同步代码，宏任务
                                    <br/>
                                    - 查询是否有微任务需要执行，执行微任务
                                    <br/>
                                    - 必要的话，渲染 UI
                                    <br/>
                                    - 开始下一轮事件循环
                                    <br/>
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="717" y="1206" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    Js 执行环境会被加入执行栈...
                </text>
            </switch>
        </g>
        <rect x="77" y="680" width="220" height="180" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="77" y="680" width="220" height="180" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 212px; height: 1px; padding-top: 770px; margin-left: 82px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <div style="line-height: 19px">
                                        <div>
                                            storage
                                        </div>
                                        <div>
                                            - sessionStorage
                                        </div>
                                        <div>
                                            - localStorage
                                        </div>
                                        <div>
                                            - storage event
                                        </div>
                                        <div>
                                            indexedDB
                                        </div>
                                        <div>
                                            - 可存储结构化克隆对象
                                        </div>
                                        <div>
                                            - 异步存储，webworker 支持同步
                                        </div>
                                        <div>
                                            - localForage ，web 存储 Polyfill
                                        </div>
                                        <div>
                                            webSQL: deprecated
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="82" y="774" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    storage...
                </text>
            </switch>
        </g>
        <rect x="77" y="1710" width="450" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 442px; height: 1px; padding-top: 1790px; margin-left: 82px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        跨站脚本攻击：XSS
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 设置 Cookie 为 Http-Only
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 过滤特殊字符，转义。jx-xss
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        跨站请求伪造： CRSF
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - GET 请求不修改数据
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 校验 Referer、校验 Token、验证码校验
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - Undefined 不安全，undefined 可做变量，使用 void 0
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 注意隐形字符，十六进制为 0x3164，转义为 \u3164，「ㅤ」
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="82" y="1794" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    跨站脚本攻击：XSS...
                </text>
            </switch>
        </g>
        <rect x="297" y="1660" width="60" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1670px; margin-left: 327px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000" style="font-size: 10px">
                                    Web 安全
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="327" y="1674" fill="#FF8000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    Web 安全
                </text>
            </switch>
        </g>
        <path d="M 1337 1650 L 1357 1650 Q 1367 1650 1367 1660 L 1367 1845 Q 1367 1855 1377 1855 L 1398.63 1855" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1403.88 1855 L 1396.88 1858.5 L 1398.63 1855 L 1396.88 1851.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="997" y="1580" width="330" height="100" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="997" y="1580" width="330" height="100" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 322px; height: 1px; padding-top: 1630px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                JSON.parse(JSON.stringify)：不能处理函数、正则、Symbol、Date、循环引用对象 ...
                                <br/>
                                MessageChannel：异步的，不能处理函数等 ...
                                <br/>
                                <br/>
                                - 深度优先：判断类型、判断循环引用、递归、
                                <font color="#ff8000">
                                    原型链
                                </font>
                                拷贝
                                <br/>
                                - 广度优先
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="1634" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    JSON.parse(JSON.stringify)：不能处理函数、正则、Symbol、Date、循环引用对象 ......
                </text>
            </switch>
        </g>
        <rect x="1162" y="1560" width="50" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1570px; margin-left: 1187px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    深拷贝
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1187" y="1574" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    深拷贝
                </text>
            </switch>
        </g>
        <path d="M 1162 1890 L 1162 1933.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1162 1938.88 L 1158.5 1931.88 L 1162 1933.63 L 1165.5 1931.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="997" y="1730" width="330" height="160" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="997" y="1730" width="330" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 322px; height: 1px; padding-top: 1810px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                getter：返回动态计算值的属性
                                <br/>
                                setter：改变属性值时执行
                                <br/>
                                Object.defineProperty：
                                <br/>
                                - configurable：是否可删除
                                <br/>
                                - writeable：是否可改变
                                <br/>
                                -
                                <font color="#ff8000">
                                    value
                                </font>
                                ：属性值，不与 get set 共存
                                <br/>
                                - enumerable：是否可枚举，Object.keys、hasOwnProperty
                                <br/>
                                - for ... in 遍历包括继承的可枚举属性，除了 Symbol
                                <br/>
                                - for ... of 遍历 [Symble.iterator]
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="1814" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    getter：返回动态计算值的属性...
                </text>
            </switch>
        </g>
        <path d="M 1406 1920 L 1377 1920 Q 1367 1920 1367 1930 L 1367 2421.86 Q 1367 2431.86 1357 2431.87 L 1333.37 2431.89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1328.12 2431.9 L 1335.11 2428.39 L 1333.37 2431.89 L 1335.12 2435.39 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1406" y="1720" width="350" height="270" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="1720" width="350" height="270" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 1855px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        特点：封装、集成、多态
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        创建对象：字面量、new Object、工厂函数、class、new 构造函数
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        继承：子类能替换所有父类，构造函数 call，原型链继承、组合继承、class extends
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        原型链：
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 对象 [[Prototype]] 指向其构造函数 prototype
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 构造函数 prototype 的 [[Prototype]] 指向其构造函数的 prototype
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        - 链式向上，指向 Object.prototype，null
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        constructor 指向其本身，
                                        <font color="#ff8000" style="font-size: 12px">
                                            instanceof
                                        </font>
                                        即判断原型链上是否有 prototype 等于对象的 [[Prototype]]
                                    </font>
                                </div>
                                <div style="line-height: 19px">
                                    <font style="font-size: 12px">
                                        设计模式：工厂、单例、享元、观察者、发布订阅、职责链、代理、装饰者
                                    </font>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="1859" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    特点：封装、集成、多态创建对象：字面量、new Object、工厂函数、class、new 构造函数...
                </text>
            </switch>
        </g>
        <rect x="1367" y="1690" width="90" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1700px; margin-left: 1412px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    面向对象与原型
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1412" y="1704" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    面向对象与原型
                </text>
            </switch>
        </g>
        <rect x="997" y="1940" width="330" height="260" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="997" y="1940" width="330" height="260" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 322px; height: 1px; padding-top: 2070px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                基本类型：调用函数转换，Number、Boolean、String
                                <br/>
                                引用类型：受 [Symble.toPrimitive] 影响
                                <br/>
                                - 预期转 number，先 valueOf，不行再 toString
                                <br/>
                                - 预期转 string，先 toString，不行再 valueOf
                                <br/>
                                - Symble 不能直接转，需 symble.toString()
                                <br/>
                                <br/>
                                单运算：
                                <br/>
                                - +-*/、~、++、--，预期转 number
                                <br/>
                                - ! 预期转 boolean
                                <br/>
                                表达式：
                                <br/>
                                - 基本类型预期转 number，非基本类型预期转 string，注意 {} + undefined，{} 在前会被识别为代码块，与 ({}) + undefined 存在差异
                                <br/>
                                - == 与 !=：
                                <br/>
                                - 类型不同，转换成相同类型再比较
                                <br/>
                                - 类型相同的非基本类型：比较内存地址
                                <br/>
                                - ![] == []
                                <br/>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="2074" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    基本类型：调用函数转换，Number、Boolean、String...
                </text>
            </switch>
        </g>
        <rect x="1162" y="1910" width="60" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1920px; margin-left: 1192px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px" color="#000000">
                                    隐式转换
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1192" y="1924" fill="#FF8000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    隐式转换
                </text>
            </switch>
        </g>
        <rect x="997" y="2240" width="330" height="380" fill="#000000" stroke="none" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="997" y="2240" width="330" height="380" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 322px; height: 1px; padding-top: 2430px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div>
                                        <span style="color: rgb(248 , 248 , 242)">
                                            <span style="color: rgb(255 , 121 , 198)">
                                                const
                                            </span>
                                        </span>
                                        <font color="#50fa7b" style="font-size: 12px">
                                            new
                                        </font>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =
                                        </span>
                                        <font color="#f8f8f2" style="font-size: 12px">
                                            (
                                        </font>
                                        <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                            ctor
                                        </span>
                                        <font color="#f8f8f2" style="font-size: 12px">
                                            ,
                                        </font>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            ...
                                        </span>
                                        <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                            args
                                        </span>
                                        <font color="#f8f8f2" style="font-size: 12px">
                                            )
                                        </font>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =&gt;
                                        </span>
                                        <font color="#f8f8f2" style="font-size: 12px">
                                            {
                                        </font>
                                    </div>
                                    <div>
                                        <font color="#f8f8f2" style="font-size: 12px">
                                        </font>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            const
                                        </span>
                                        <font color="#f8f8f2" style="font-size: 12px">
                                            obj
                                        </font>
                                        <span style="color: rgb(255 , 121 , 198)">
                                            =
                                        </span>
                                        <font color="#f8f8f2" style="font-size: 12px">
                                        </font>
                                        <font color="#ff79c6" style="font-size: 12px">
                                            <b>
                                                {}
                                            </b>
                                        </font>
                                        <font color="#f8f8f2" style="font-size: 12px">
                                            ;
                                        </font>
                                    </div>
                                    <br/>
                                    <div style="color: rgb(248 , 248 , 242)">
                                        obj.__proto__
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        <span style="color: #8be9fd ; font-style: italic">
                                            ctor
                                        </span>
                                        .prototype;
                                    </div>
                                    <br/>
                                    <div style="color: rgb(248 , 248 , 242)">
                                        <span style="color: #ff79c6">
                                            const
                                        </span>
                                        result
                                        <span style="color: #ff79c6">
                                            =
                                        </span>
                                        ctor.
                                        <span style="color: #50fa7b">
                                            apply
                                        </span>
                                        (obj, args);
                                    </div>
                                    <br/>
                                    <div style="color: rgb(248 , 248 , 242)">
                                        <span style="color: #ff79c6">
                                            return
                                        </span>
                                        <span style="color: #ff79c6">
                                            typeof
                                        </span>
                                        result
                                        <span style="color: #ff79c6">
                                            ===
                                        </span>
                                        <span style="color: #e9f284">
                                            '
                                        </span>
                                        <span style="color: #f1fa8c">
                                            object
                                        </span>
                                        <span style="color: #e9f284">
                                            '
                                        </span>
                                        <span style="color: #ff79c6">
                                            ?
                                        </span>
                                        result
                                        <span style="color: #ff79c6">
                                            :
                                        </span>
                                        obj;
                                    </div>
                                    <div style="color: rgb(248 , 248 , 242)">
                                        };
                                    </div>
                                    <div style="color: rgb(248 , 248 , 242)">
                                        <br/>
                                    </div>
                                    <div style="color: rgb(248 , 248 , 242)">
                                        <div style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px">
                                            <div>
                                                <span style="color: #ff79c6">
                                                    const
                                                </span>
                                                <span style="color: rgb(80 , 250 , 123) ; font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace">
                                                    instanceof
                                                </span>
                                                <span style="color: rgb(255 , 121 , 198)">
                                                    =
                                                </span>
                                                <span>
                                                    (
                                                </span>
                                                <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                                    instance
                                                </span>
                                                <span>
                                                    ,
                                                </span>
                                                <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                                    Ctor
                                                </span>
                                                <span>
                                                    )
                                                </span>
                                                <span style="color: rgb(255 , 121 , 198)">
                                                    =&gt;
                                                </span>
                                                <span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    let
                                                </span>
                                                proto
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                instance.__proto__;
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    while
                                                </span>
                                                (
                                                <span style="color: #bd93f9">
                                                    true
                                                </span>
                                                ) {
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    if
                                                </span>
                                                (proto
                                                <span style="color: #ff79c6">
                                                    ===
                                                </span>
                                                <span style="color: #bd93f9">
                                                    null
                                                </span>
                                                )
                                                <span style="color: #ff79c6">
                                                    return
                                                </span>
                                                <span style="color: #bd93f9">
                                                    false
                                                </span>
                                                ;
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    if
                                                </span>
                                                (proto
                                                <span style="color: #ff79c6">
                                                    ===
                                                </span>
                                                <span style="color: #8be9fd ; font-style: italic">
                                                    Ctor
                                                </span>
                                                .prototype)
                                                <span style="color: #ff79c6">
                                                    return
                                                </span>
                                                <span style="color: #bd93f9">
                                                    true
                                                </span>
                                                ;
                                            </div>
                                            <div>
                                                proto
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                proto.__proto__;
                                            </div>
                                            <div>
                                                }
                                            </div>
                                            <div>
                                                };
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="2434" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    const new = (ctor, ...args) =&gt; {...
                </text>
            </switch>
        </g>
        <path d="M 2207 1190 L 2247 1190 Q 2257 1190 2257 1180 L 2257 560 Q 2257 550 2247 550 L 1777 550 Q 1767 550 1767 540 L 1767 520 Q 1767 510 1757 510 L 1592.14 510 Q 1582.14 510 1582.12 500 L 1582.06 476.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1582.05 471.12 L 1585.57 478.11 L 1582.06 476.37 L 1578.57 478.13 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1907 1300 L 1907 1310 Q 1907 1320 1907 1330 L 1907 1343.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1907 1348.88 L 1903.5 1341.88 L 1907 1343.63 L 1910.5 1341.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2002.39 1303.36 L 2002.41 1311.68 Q 2002.43 1320 2012.43 1320 L 2242 1320 Q 2252 1320 2252 1310 L 2252 1230 Q 2252 1220 2262 1220 L 2290.63 1220" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2295.88 1220 L 2288.88 1223.5 L 2290.63 1220 L 2288.88 1216.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1837" y="1140" width="370" height="160" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="1140" width="370" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 1220px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                执行上下文：this，与函数的执行环境有关
                                <br/>
                                - 全局上线文，window、globalThis
                                <br/>
                                - 函数上下文，函数的调用对象，注意
                                <font color="#ff8000">
                                    箭头函数
                                </font>
                                、
                                <font color="#ff8000">
                                    call
                                </font>
                                、
                                <font color="#ff8000">
                                    apply
                                </font>
                                、
                                <font color="#ff8000">
                                    bind
                                </font>
                                <br/>
                                - eval 的上下文
                                <br/>
                                词法作用域：由执行上下文创建，储存标识和实际引用的映射，可被 with 改变
                                <br/>
                                - 全局作用域
                                <br/>
                                - 模块作用域
                                <br/>
                                - 函数作用域
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="1224" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    执行上下文：this，与函数的执行环境有关...
                </text>
            </switch>
        </g>
        <rect x="1837" y="1350" width="370" height="120" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="1350" width="370" height="120" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 1410px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <font style="font-size: 12px">
                                    栈：自动分配相对大小的内存空间，FILO 先进后出
                                    <br/>
                                    - 速度快，容量小
                                    <br/>
                                    - 存放基本数据类型
                                    <br/>
                                    - 用于值传递
                                    <br/>
                                    堆：动态分配大小不固定，不会自动释放的内存空间，无序树状结构，支持 key / value 存储形式
                                    <br/>
                                    - 速度慢，容量大
                                    <br/>
                                    - 存放引用数据类型，地址指针存放在栈中
                                    <br/>
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="1414" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    栈：自动分配相对大小的内存空间，FILO 先进后出...
                </text>
            </switch>
        </g>
        <path d="M 80 2020 L 17 2020 Q 7 2020 7 2030 L 7 2317.14 Q 7 2327.14 14.31 2327.16 L 21.62 2327.18" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 26.87 2327.2 L 19.86 2330.68 L 21.62 2327.18 L 19.88 2323.68 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 305 2100 L 305 2110 Q 305 2120 315 2120 L 417 2120 Q 427 2120 427 2126.82 L 427 2133.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 427 2138.88 L 423.5 2131.88 L 427 2133.63 L 430.5 2131.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="80" y="1940" width="450" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 442px; height: 1px; padding-top: 2020px; margin-left: 85px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    - 回调函数
                                </div>
                                <div style="line-height: 19px">
                                    - 事件监听
                                </div>
                                <div style="line-height: 19px">
                                    - generator / yield
                                </div>
                                <div style="line-height: 19px">
                                    - async / await
                                </div>
                                <div style="line-height: 19px">
                                    - await Promise
                                </div>
                                <div style="line-height: 19px">
                                    - await Thenable Object
                                </div>
                                <div style="line-height: 19px">
                                    - for await ... of
                                </div>
                                <div style="line-height: 19px">
                                    - Promise
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="85" y="2024" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    - 回调函数...
                </text>
            </switch>
        </g>
        <rect x="357" y="1890" width="80" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1900px; margin-left: 397px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    异步解决方案
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="397" y="1904" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    异步解决方案
                </text>
            </switch>
        </g>
        <rect x="27" y="2140" width="247" height="390" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 239px; height: 1px; padding-top: 2335px; margin-left: 32px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div style="color: rgb(248 , 248 , 242) ; line-height: 19px">
                                        <div>
                                            <span style="color: rgb(255 , 121 , 198)">
                                                class
                                            </span>
                                            <span style="color: rgb(139 , 233 , 253)">
                                                EventBus
                                            </span>
                                            {
                                        </div>
                                        <div>
                                            subs
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            <span style="color: #ff79c6 ; font-weight: bold">
                                                new
                                            </span>
                                            <span style="color: #8be9fd ; font-style: italic">
                                                Map
                                            </span>
                                            ();
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #50fa7b">
                                                on
                                            </span>
                                            (
                                            <span style="color: #ffb86c ; font-style: italic">
                                                type
                                            </span>
                                            ,
                                            <span style="color: #ffb86c ; font-style: italic">
                                                event
                                            </span>
                                            ) {
                                        </div>
                                        <div>
                                            <span style="color: #ff79c6">
                                                const
                                            </span>
                                            sub
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            <span style="color: #bd93f9 ; font-style: italic">
                                                this
                                            </span>
                                            .subs.
                                            <span style="color: #50fa7b">
                                                get
                                            </span>
                                            (type)
                                            <span style="color: #ff79c6">
                                                ||
                                            </span>
                                            [];
                                        </div>
                                        <div>
                                            subs.
                                            <span style="color: #50fa7b">
                                                set
                                            </span>
                                            (type, [
                                            <span style="color: #ff79c6">
                                                ...
                                            </span>
                                            sub, event]);
                                        </div>
                                        <div>
                                            }
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #50fa7b">
                                                emit
                                            </span>
                                            (
                                            <span style="color: #ffb86c ; font-style: italic">
                                                type
                                            </span>
                                            ,
                                            <span style="color: #ff79c6">
                                                ...
                                            </span>
                                            <span style="color: #ffb86c ; font-style: italic">
                                                payload
                                            </span>
                                            ) {
                                        </div>
                                        <div>
                                            <span style="color: #ff79c6">
                                                const
                                            </span>
                                            sub
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            <span style="color: #bd93f9 ; font-style: italic">
                                                this
                                            </span>
                                            .subs.
                                            <span style="color: #50fa7b">
                                                get
                                            </span>
                                            (type)
                                            <span style="color: #ff79c6">
                                                ||
                                            </span>
                                            [];
                                        </div>
                                        <br/>
                                        <div>
                                            sub.
                                            <span style="color: #50fa7b">
                                                forEach
                                            </span>
                                            ((
                                            <span style="color: #ffb86c ; font-style: italic">
                                                event
                                            </span>
                                            )
                                            <span style="color: #ff79c6">
                                                =&gt;
                                            </span>
                                            <span style="color: #50fa7b">
                                                event
                                            </span>
                                            (
                                            <span style="color: #ff79c6">
                                                ...
                                            </span>
                                            payload));
                                        </div>
                                        <div>
                                            }
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #50fa7b">
                                                off
                                            </span>
                                            (
                                            <span style="color: #ffb86c ; font-style: italic">
                                                type
                                            </span>
                                            ,
                                            <span style="color: #ffb86c ; font-style: italic">
                                                event
                                            </span>
                                            ) {
                                        </div>
                                        <div>
                                            <span style="color: #ff79c6">
                                                const
                                            </span>
                                            sub
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            <span style="color: #bd93f9 ; font-style: italic">
                                                this
                                            </span>
                                            .subs.
                                            <span style="color: #50fa7b">
                                                get
                                            </span>
                                            (type)
                                            <span style="color: #ff79c6">
                                                ||
                                            </span>
                                            [];
                                        </div>
                                        <br/>
                                        <div>
                                            sub.
                                            <span style="color: #50fa7b">
                                                splice
                                            </span>
                                            (sub.
                                            <span style="color: #50fa7b">
                                                indexOf
                                            </span>
                                            (event)
                                            <span style="color: #ff79c6">
                                                &gt;&gt;&gt;
                                            </span>
                                            <span style="color: #bd93f9">
                                                0
                                            </span>
                                            ,
                                            <span style="color: #bd93f9">
                                                1
                                            </span>
                                            );
                                        </div>
                                        <div>
                                            }
                                        </div>
                                        <div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="32" y="2339" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    class EventBus {...
                </text>
            </switch>
        </g>
        <rect x="7" y="2080" width="60" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 2090px; margin-left: 37px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                Event Bus
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="37" y="2093" fill="#000000" font-family="Helvetica" font-size="10px" text-anchor="middle">
                    Event Bus
                </text>
            </switch>
        </g>
        <rect x="303.5" y="2140" width="247" height="390" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 239px; height: 1px; padding-top: 2335px; margin-left: 309px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div style="color: rgb(248 , 248 , 242) ; line-height: 19px">
                                        <div style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px">
                                            <div>
                                                <span style="color: rgb(255 , 121 , 198)">
                                                    const
                                                </span>
                                                <span style="color: rgb(80 , 250 , 123)">
                                                    generatorRun
                                                </span>
                                                <span style="color: rgb(255 , 121 , 198)">
                                                    =
                                                </span>
                                                (
                                                <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                                    genFunc
                                                </span>
                                                )
                                                <span style="color: rgb(255 , 121 , 198)">
                                                    =&gt;
                                                </span>
                                                {
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    return
                                                </span>
                                                <span style="color: #ff79c6 ; font-weight: bold">
                                                    new
                                                </span>
                                                <span style="color: #8be9fd ; font-style: italic">
                                                    Promise
                                                </span>
                                                ((
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    resolve
                                                </span>
                                                ,
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    reject
                                                </span>
                                                )
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                                {
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    const
                                                </span>
                                                gen
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                <span style="color: #50fa7b">
                                                    genFunc
                                                </span>
                                                ();
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    const
                                                </span>
                                                <span style="color: #50fa7b">
                                                    run
                                                </span>
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                (
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    next
                                                </span>
                                                ,
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    prevValue
                                                </span>
                                                )
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                                {
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    try
                                                </span>
                                                {
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    const
                                                </span>
                                                { value, done }
                                                <span style="color: #ff79c6">
                                                    =
                                                </span>
                                                <span style="color: #50fa7b">
                                                    next
                                                </span>
                                                (prevValue);
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    if
                                                </span>
                                                (done)
                                                <span style="color: #ff79c6">
                                                    return
                                                </span>
                                                <span style="color: #50fa7b">
                                                    resolve
                                                </span>
                                                (value);
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    else
                                                </span>
                                                <span style="color: #ff79c6">
                                                    return
                                                </span>
                                                <span style="color: #8be9fd ; font-style: italic">
                                                    Promise
                                                </span>
                                                .
                                                <span style="color: #50fa7b">
                                                    resolve
                                                </span>
                                                (value).
                                                <span style="color: #50fa7b">
                                                    then
                                                </span>
                                                (()
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                                <span style="color: #50fa7b">
                                                    run
                                                </span>
                                                (next, value));
                                            </div>
                                            <div>
                                                }
                                                <span style="color: #ff79c6">
                                                    catch
                                                </span>
                                                (e) {
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    return
                                                </span>
                                                <span style="color: #50fa7b">
                                                    reject
                                                </span>
                                                (e);
                                            </div>
                                            <div>
                                                }
                                            </div>
                                            <div>
                                                };
                                            </div>
                                            <br/>
                                            <div>
                                                <span style="color: #50fa7b">
                                                    run
                                                </span>
                                                (gen.next.
                                                <span style="color: #50fa7b">
                                                    bind
                                                </span>
                                                (gen));
                                            </div>
                                            <div>
                                                });
                                            </div>
                                            <div>
                                                };
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="309" y="2339" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    const generatorRun = (genFunc) =&gt; {...
                </text>
            </switch>
        </g>
        <rect x="327" y="2100" width="60" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 2110px; margin-left: 357px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    async 实现
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="357" y="2114" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    async 实现
                </text>
            </switch>
        </g>
        <path d="M 2207 1700 L 2257 1700 Q 2267 1700 2267 1710 L 2267 2080 Q 2267 2090 2277 2090 L 2710.63 2090" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2715.88 2090 L 2708.88 2093.5 L 2710.63 2090 L 2708.88 2086.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1837" y="1510" width="370" height="370" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="1510" width="370" height="370" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 1695px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <font style="font-size: 12px">
                                    三种状态：PENGDING、FULFILLED、REJECTED
                                    <br/>
                                    六个静态方法：
                                    <br/>
                                    - resolve：返回 fulfilled 的 Promise
                                    <br/>
                                    - reject：返回 rejected 的 Promise
                                    <br/>
                                    - any：接收 iterator，一个 fulfilled 执行 resolve，全部 rejected 执行 reject
                                    <br/>
                                    - race：接收 iterator，状态变更即返回
                                    <br/>
                                    - all：接收 iterator，全部 fulfilled 执行 resolve，有序返回，否则 reject
                                    <br/>
                                    - allSettled：接收 iterator，返回有序数组，value 保存值，status 保存状态变更
                                    <br/>
                                    三个私有方法：#run、#resolve、#reject
                                    <br/>
                                    三个实例方法：
                                    <br/>
                                    - then：接收 onFulfilled、onRejected
                                    <br/>
                                    - 返回一个 Promise
                                    <br/>
                                    - fulfilled：
                                    <br/>
                                    <span style="white-space: pre">
                                    </span>
                                    - 入参 value 为 fulfilledQueue 中 callback 执行结果
                                    <br/>
                                    <span>
                                    </span>
                                    <span style="white-space: pre">
                                    </span>
                                    - 判断 onFulfilled
                                    <br/>
                                    <span>
                                    </span>
                                    <span style="white-space: pre">
                                    </span>
                                    - 非函数 resolve(onFulfilled)
                                    <br/>
                                    <span>
                                    </span>
                                    <span style="white-space: pre">
                                    </span>
                                    - 函数，执行 onFulfilled(value)，判断结果 result
                                    <br/>
                                    <span style="white-space: pre">
                                    </span>
                                    <span style="white-space: pre">
                                    </span>
                                    - instanceof Promise，result.then(resolve, reject)
                                    <br/>
                                    <span style="white-space: pre">
                                    </span>
                                    <span style="white-space: pre">
                                    </span>
                                    - 否则，resolve(result)
                                    <br/>
                                    - catch：接收 onRejected，this.then(undefined, onRejected)
                                    <br/>
                                    - finally：接收 callback，this.then(resolve, reject)，resolve，reject 均由 Promise.then(callback()) 包装后返回
                                    <br/>
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="1699" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    三种状态：PENGDING、FULFILLED、REJECTED...
                </text>
            </switch>
        </g>
        <rect x="882" y="1340" width="50" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1350px; margin-left: 907px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px" color="#000000">
                                    Promise
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="907" y="1354" fill="#FF8000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    Promise
                </text>
            </switch>
        </g>
        <rect x="2717" y="0" width="550" height="3180" fill="#000000" stroke="none" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="2717" y="0" width="550" height="3180" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 542px; height: 1px; padding-top: 1590px; margin-left: 2722px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="color: rgb(248 , 248 , 242) ; line-height: 19px">
                                    <div style="line-height: 19px">
                                        <div style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px">
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: rgb(255 , 121 , 198)">
                                                        const
                                                    </span>
                                                    StatusMap
                                                    <span style="color: rgb(255 , 121 , 198)">
                                                        =
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    PENDING
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    <span style="color: #e9f284">
                                                        '
                                                    </span>
                                                    <span style="color: #f1fa8c">
                                                        pending
                                                    </span>
                                                    <span style="color: #e9f284">
                                                        '
                                                    </span>
                                                    ,
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    FULFILLED
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    <span style="color: #e9f284">
                                                        '
                                                    </span>
                                                    <span style="color: #f1fa8c">
                                                        fulfilled
                                                    </span>
                                                    <span style="color: #e9f284">
                                                        '
                                                    </span>
                                                    ,
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    REJECTED
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    <span style="color: #e9f284">
                                                        '
                                                    </span>
                                                    <span style="color: #f1fa8c">
                                                        rejected
                                                    </span>
                                                    <span style="color: #e9f284">
                                                        '
                                                    </span>
                                                    ,
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        class
                                                    </span>
                                                    <span style="color: #8be9fd">
                                                        Promise
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        static
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #ff79c6 ; font-weight: bold">
                                                        new
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        resolve
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (value))
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        static
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #ff79c6 ; font-weight: bold">
                                                        new
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    ((
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        resolve
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        reject
                                                    </span>
                                                    )
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    (value))
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        static
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        race
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        iterable
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #ff79c6 ; font-weight: bold">
                                                        new
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    ((
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        resolve
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        reject
                                                    </span>
                                                    )
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    iterable.
                                                    <span style="color: #50fa7b">
                                                        forEach
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        promise
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (promise).
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (resolve, reject)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        static
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        any
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        iterable
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #ff79c6 ; font-weight: bold">
                                                        new
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    ((
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        resolve
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        reject
                                                    </span>
                                                    )
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        let
                                                    </span>
                                                    results
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    []
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    iterable.
                                                    <span style="color: #50fa7b">
                                                        forEach
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        promise
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (promise).
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (resolve,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        err
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    results.
                                                    <span style="color: #50fa7b">
                                                        push
                                                    </span>
                                                    (err)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        if
                                                    </span>
                                                    (results.length
                                                    <span style="color: #ff79c6">
                                                        ===
                                                    </span>
                                                    iterable.length)
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    (results)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        static
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        all
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        iterable
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #ff79c6 ; font-weight: bold">
                                                        new
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    ((
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        resolve
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        reject
                                                    </span>
                                                    )
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        let
                                                    </span>
                                                    results
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    []
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Object
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        entries
                                                    </span>
                                                    (iterable).
                                                    <span style="color: #50fa7b">
                                                        forEach
                                                    </span>
                                                    (([
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        i
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        promise
                                                    </span>
                                                    ])
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (promise).
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    results[i]
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    value
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        if
                                                    </span>
                                                    (results.length
                                                    <span style="color: #ff79c6">
                                                        ===
                                                    </span>
                                                    iterable.length)
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (results)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }, reject)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        static
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        allSettled
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        iterable
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #ff79c6 ; font-weight: bold">
                                                        new
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    ((
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        resolve
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        reject
                                                    </span>
                                                    )
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        let
                                                    </span>
                                                    results
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    []
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Object
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        entries
                                                    </span>
                                                    (iterable).
                                                    <span style="color: #50fa7b">
                                                        forEach
                                                    </span>
                                                    (([
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        i
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        promise
                                                    </span>
                                                    ])
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (promise)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    .
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    results[i]
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    { value, status
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    StatusMap.
                                                    <span style="color: #bd93f9">
                                                        FULFILLED
                                                    </span>
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    },
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        err
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    results[i]
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    { value
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    err, status
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    StatusMap.
                                                    <span style="color: #bd93f9">
                                                        REJECTED
                                                    </span>
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    .
                                                    <span style="color: #50fa7b">
                                                        finally
                                                    </span>
                                                    (()
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    results.length
                                                    <span style="color: #ff79c6">
                                                        ===
                                                    </span>
                                                    iterable.length
                                                    <span style="color: #ff79c6">
                                                        &amp;&amp;
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (results))
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        constructor
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        handler
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Object
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        assign
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    , {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    status
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    StatusMap.
                                                    <span style="color: #bd93f9">
                                                        PENDING
                                                    </span>
                                                    ,
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    value
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    <span style="color: #bd93f9">
                                                        undefined
                                                    </span>
                                                    ,
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    fulfilledQueue
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    [],
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    rejectedQueue
                                                    <span style="color: #ff79c6">
                                                        :
                                                    </span>
                                                    [],
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        handler
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .#resolve.
                                                    <span style="color: #50fa7b">
                                                        bind
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    ),
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .#reject.
                                                    <span style="color: #50fa7b">
                                                        bind
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    ))
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    #
                                                    <span style="color: #50fa7b">
                                                        run
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        status
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        queue
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Object
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        assign
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    , {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    status,
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    value,
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        let
                                                    </span>
                                                    callback
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        while
                                                    </span>
                                                    ((callback
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        queue
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        shift
                                                    </span>
                                                    ())) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        callback
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    #
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        if
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        instanceof
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .#resolve.
                                                    <span style="color: #50fa7b">
                                                        bind
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    ),
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .#reject.
                                                    <span style="color: #50fa7b">
                                                        bind
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    ))
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd">
                                                        setTimeout
                                                    </span>
                                                    (()
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        #run
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        StatusMap
                                                    </span>
                                                    .FULFILLED,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    ,
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .fulfilledQueue))
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    #
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        err
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd">
                                                        setTimeout
                                                    </span>
                                                    (()
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        #run
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        StatusMap
                                                    </span>
                                                    .REJECTED,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        err
                                                    </span>
                                                    ,
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .rejectedQueue))
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        onFulfilled
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        onRejected
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        const
                                                    </span>
                                                    {
                                                    <span style="color: #bd93f9">
                                                        status
                                                    </span>
                                                    ,
                                                    <span style="color: #bd93f9">
                                                        value
                                                    </span>
                                                    }
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        const
                                                    </span>
                                                    {
                                                    <span style="color: #bd93f9">
                                                        PENDING
                                                    </span>
                                                    ,
                                                    <span style="color: #bd93f9">
                                                        FULFILLED
                                                    </span>
                                                    ,
                                                    <span style="color: #bd93f9">
                                                        REJECTED
                                                    </span>
                                                    }
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    <span style="color: #bd93f9">
                                                        StatusMap
                                                    </span>
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #ff79c6 ; font-weight: bold">
                                                        new
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    ((
                                                    <span style="color: #50fa7b ; font-style: italic">
                                                        resolve
                                                    </span>
                                                    ,
                                                    <span style="color: #50fa7b ; font-style: italic">
                                                        reject
                                                    </span>
                                                    )
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        const
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        fulfilled
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        try
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        if
                                                    </span>
                                                    (
                                                    <span style="color: #ff79c6">
                                                        !
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        onFulfilled
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        instanceof
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Function
                                                    </span>
                                                    ))
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        onFulfilled
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        else
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        const
                                                    </span>
                                                    <span style="color: #bd93f9">
                                                        result
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        onFulfilled
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        value
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        if
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        result
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        instanceof
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    )
                                                    <span style="color: #bd93f9">
                                                        result
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    ,
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        else
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        result
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                    <span style="color: #ff79c6">
                                                        catch
                                                    </span>
                                                    (err) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    (err)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        const
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        rejected
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        err
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        try
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        if
                                                    </span>
                                                    (
                                                    <span style="color: #ff79c6">
                                                        !
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        onRejected
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        instanceof
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Function
                                                    </span>
                                                    )) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        err
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                    <span style="color: #ff79c6">
                                                        else
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        let
                                                    </span>
                                                    result
                                                    <span style="color: #ff79c6">
                                                        =
                                                    </span>
                                                    <span style="color: #50fa7b">
                                                        onRejected
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        err
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        if
                                                    </span>
                                                    (result
                                                    <span style="color: #ff79c6">
                                                        instanceof
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    ) result.
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        undefined
                                                    </span>
                                                    ,
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        else
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    (res)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                    <span style="color: #ff79c6">
                                                        catch
                                                    </span>
                                                    (err) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        reject
                                                    </span>
                                                    (err)
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        switch
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        status
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        case
                                                    </span>
                                                    <span style="color: #bd93f9">
                                                        PENDING
                                                    </span>
                                                    : {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .fulfilledQueue.
                                                    <span style="color: #50fa7b">
                                                        push
                                                    </span>
                                                    (
                                                    <span style="color: #50fa7b">
                                                        fulfilled
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .rejectedQueue.
                                                    <span style="color: #50fa7b">
                                                        push
                                                    </span>
                                                    (
                                                    <span style="color: #50fa7b">
                                                        rejected
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        break
                                                    </span>
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        case
                                                    </span>
                                                    <span style="color: #bd93f9">
                                                        FULFILLED
                                                    </span>
                                                    : {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        fulfilled
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        value
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        break
                                                    </span>
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        default
                                                    </span>
                                                    :
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        rejected
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        value
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        catch
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        onRejected
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (
                                                    <span style="color: #bd93f9">
                                                        undefined
                                                    </span>
                                                    ,
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        onRejected
                                                    </span>
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <span style="background-color: rgb(77 , 77 , 77)">
                                                <br/>
                                            </span>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #50fa7b">
                                                        finally
                                                    </span>
                                                    (
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        callback
                                                    </span>
                                                    ) {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        return
                                                    </span>
                                                    <span style="color: #bd93f9 ; font-style: italic">
                                                        this
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        result
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (
                                                    <span style="color: #50fa7b">
                                                        callback
                                                    </span>
                                                    ()).
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (()
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        result
                                                    </span>
                                                    ),
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        error
                                                    </span>
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #8be9fd ; font-style: italic">
                                                        Promise
                                                    </span>
                                                    .
                                                    <span style="color: #50fa7b">
                                                        resolve
                                                    </span>
                                                    (
                                                    <span style="color: #50fa7b">
                                                        callback
                                                    </span>
                                                    ()).
                                                    <span style="color: #50fa7b">
                                                        then
                                                    </span>
                                                    (()
                                                    <span style="color: #ff79c6">
                                                        =&gt;
                                                    </span>
                                                    {
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    <span style="color: #ff79c6">
                                                        throw
                                                    </span>
                                                    <span style="color: #ffb86c ; font-style: italic">
                                                        error
                                                    </span>
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    })
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    )
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                            <div>
                                                <span style="background-color: rgb(77 , 77 , 77)">
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2722" y="1594" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    const StatusMap = {...
                </text>
            </switch>
        </g>
        <path d="M 297 546.25 L 373.63 546.25" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 378.88 546.25 L 371.88 549.75 L 373.63 546.25 L 371.88 542.75 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="77" y="456.25" width="220" height="180" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="77" y="456.25" width="220" height="180" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 212px; height: 1px; padding-top: 546px; margin-left: 82px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div style="line-height: 19px">
                                        <div>
                                            受同源策略限制 cookie 无法访问，请求不能发出等。Protocol 协议相同, port 端口相同, host 域名相同
                                        </div>
                                        <div>
                                            - jsonp 跨域， 动态 script 标签
                                        </div>
                                        <div>
                                            - document.domain + iframe
                                        </div>
                                        <div>
                                            - postMessage
                                        </div>
                                        <div>
                                            - CORS: Access-Control-Allow-Origin
                                        </div>
                                        <div>
                                            - node 代理
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="82" y="550" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    受同源策略限制 cookie 无法访问，请求不能发出等。Protocol 协议相同, port 端口相同, host 域名相同...
                </text>
            </switch>
        </g>
        <rect x="234" y="636.25" width="40" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 646px; margin-left: 254px;">
                        <div data-drawio-colors="color: #FF8000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 128, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font color="#000000" style="font-size: 10px">
                                    跨域
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="254" y="650" fill="#FF8000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    跨域
                </text>
            </switch>
        </g>
        <rect x="380" y="491.25" width="150" height="110" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="380" y="491.25" width="150" height="110" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 142px; height: 1px; padding-top: 546px; margin-left: 385px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <div style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px">
                                        <div>
                                            - BroadCast Channel
                                        </div>
                                        <div>
                                            - Service Worker
                                        </div>
                                        <div>
                                            - Shared Worker
                                        </div>
                                        <div>
                                            - LocalStorage: storageEvent
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="385" y="550" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    - BroadCast Channel...
                </text>
            </switch>
        </g>
        <rect x="307" y="524.37" width="60" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 534px; margin-left: 337px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    页面通讯
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="337" y="538" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    页面通讯
                </text>
            </switch>
        </g>
        <path d="M 1756 235 L 1786.57 235 Q 1796.57 235 1796.57 225 L 1796.57 160 Q 1796.57 150 1806.57 150 L 1830.63 150" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1835.88 150 L 1828.88 153.5 L 1830.63 150 L 1828.88 146.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1406" y="0" width="350" height="470" fill="#000000" stroke="none" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="0" width="350" height="470" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 235px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div style="color: rgb(248 , 248 , 242) ; font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px">
                                        <div>
                                            <span style="color: rgb(139 , 233 , 253) ; font-style: italic">
                                                Function
                                            </span>
                                            .prototype.
                                            <span style="color: rgb(80 , 250 , 123)">
                                                _call
                                            </span>
                                            <span style="color: rgb(255 , 121 , 198)">
                                                =
                                            </span>
                                            <span style="color: rgb(255 , 121 , 198)">
                                                function
                                            </span>
                                            (
                                            <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                                context
                                            </span>
                                            ,
                                            <span style="color: rgb(255 , 121 , 198)">
                                                ...
                                            </span>
                                            <span style="color: rgb(255 , 184 , 108) ; font-style: italic">
                                                args
                                            </span>
                                            ) {
                                        </div>
                                        <div>
                                            context
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            context
                                            <span style="color: #ff79c6">
                                                ||
                                            </span>
                                            window;
                                        </div>
                                        <div>
                                            context.fn
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            <span style="color: #bd93f9 ; font-style: italic">
                                                this
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #ff79c6">
                                                const
                                            </span>
                                            result
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            context.
                                            <span style="color: #50fa7b">
                                                fn
                                            </span>
                                            (
                                            <span style="color: #ff79c6">
                                                ...
                                            </span>
                                            args);
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #ff79c6">
                                                delete
                                            </span>
                                            context.fn;
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #ff79c6">
                                                return
                                            </span>
                                            result;
                                        </div>
                                        <div>
                                            };
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #8be9fd ; font-style: italic">
                                                Function
                                            </span>
                                            .prototype.
                                            <span style="color: #50fa7b">
                                                _apply
                                            </span>
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            <span style="color: #ff79c6">
                                                function
                                            </span>
                                            (
                                            <span style="color: #ffb86c ; font-style: italic">
                                                context
                                            </span>
                                            ,
                                            <span style="color: #ffb86c ; font-style: italic">
                                                arg
                                            </span>
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            []) {
                                        </div>
                                        <div>
                                            context
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            context
                                            <span style="color: #ff79c6">
                                                ||
                                            </span>
                                            window;
                                        </div>
                                        <div>
                                            context.fn
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            <span style="color: #bd93f9 ; font-style: italic">
                                                this
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #ff79c6">
                                                const
                                            </span>
                                            result
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            context.
                                            <span style="color: #50fa7b">
                                                fn
                                            </span>
                                            (
                                            <span style="color: #ff79c6">
                                                ...
                                            </span>
                                            arg);
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #ff79c6">
                                                delete
                                            </span>
                                            context.fn;
                                        </div>
                                        <div>
                                            <span style="color: #ff79c6">
                                                return
                                            </span>
                                            result;
                                        </div>
                                        <div>
                                            };
                                        </div>
                                        <br/>
                                        <div>
                                            <span style="color: #8be9fd ; font-style: italic">
                                                Function
                                            </span>
                                            .prototype.
                                            <span style="color: #50fa7b">
                                                _bind
                                            </span>
                                            <span style="color: #ff79c6">
                                                =
                                            </span>
                                            <span style="color: #ff79c6">
                                                function
                                            </span>
                                            (
                                            <span style="color: #ffb86c ; font-style: italic">
                                                context
                                            </span>
                                            ,
                                            <span style="color: #ff79c6">
                                                ...
                                            </span>
                                            <span style="color: #ffb86c ; font-style: italic">
                                                args
                                            </span>
                                            ) {
                                        </div>
                                        <div>
                                            <span style="color: #ff79c6">
                                                return
                                            </span>
                                            ()
                                            <span style="color: #ff79c6">
                                                =&gt;
                                            </span>
                                            <span style="color: #bd93f9 ; font-style: italic">
                                                this
                                            </span>
                                            .
                                            <span style="color: #50fa7b">
                                                apply
                                            </span>
                                            (context, args);
                                        </div>
                                        <div>
                                            };
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="239" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    Function.prototype._call = function (context, ...args) {...
                </text>
            </switch>
        </g>
        <rect x="1837" y="60" width="370" height="180" fill="#000000" stroke="none" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="60" width="370" height="180" fill="#4d4d4d" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 150px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div style="color: rgb(248 , 248 , 242) ; line-height: 19px">
                                        <div style="line-height: 19px">
                                            <div>
                                                <span style="color: rgb(255 , 121 , 198)">
                                                    const
                                                </span>
                                                <span style="color: rgb(80 , 250 , 123)">
                                                    curry
                                                </span>
                                                <span style="color: rgb(255 , 121 , 198)">
                                                    =
                                                </span>
                                            </div>
                                            <div>
                                                (
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    fn
                                                </span>
                                                ,
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    pre
                                                </span>
                                                )
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                            </div>
                                            <div>
                                                (
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    args
                                                </span>
                                                )
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                            </div>
                                            <div>
                                                (
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    value
                                                </span>
                                                )
                                                <span style="color: #ff79c6">
                                                    =&gt;
                                                </span>
                                            </div>
                                            <div>
                                                (
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    value
                                                </span>
                                                .length
                                                <span style="color: #ff79c6">
                                                    ===
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    fn
                                                </span>
                                                .length
                                                <span style="color: #ff79c6">
                                                    ?
                                                </span>
                                                <span style="color: #50fa7b">
                                                    fn
                                                </span>
                                                (
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    value
                                                </span>
                                                )
                                                <span style="color: #ff79c6">
                                                    :
                                                </span>
                                                <span style="color: #50fa7b">
                                                    curry
                                                </span>
                                                (
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    fn
                                                </span>
                                                ,
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    value
                                                </span>
                                                ))(
                                            </div>
                                            <div>
                                                <span style="color: #ff79c6">
                                                    ...
                                                </span>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    pre
                                                </span>
                                                ,
                                            </div>
                                            <div>
                                                <span style="color: #ffb86c ; font-style: italic">
                                                    args
                                                </span>
                                            </div>
                                            <div>
                                                );
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="154" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    const curry =...
                </text>
            </switch>
        </g>
        <rect x="1837" y="1920" width="370" height="140" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1837" y="1920" width="370" height="140" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 1990px; margin-left: 1842px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <font style="font-size: 12px">
                                    <div style="line-height: 19px">
                                        <div>
                                            - 分代式垃圾回收
                                        </div>
                                        <div>
                                            - 新生代: 周期短，效率高
                                        </div>
                                        <div>
                                            - Scavenge 算法: 以空间换时间,有序排列，释放非活动对象。两次回收后还存在的转移到老生代
                                        </div>
                                        <div>
                                            - 老生代
                                        </div>
                                        <div>
                                            - 标记清除，清理边界碎片
                                        </div>
                                        <div>
                                            - 引用计数，处理循环引用问题
                                        </div>
                                    </div>
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1842" y="1994" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    - 分代式垃圾回收...
                </text>
            </switch>
        </g>
        <rect x="1406" y="2040" width="350" height="340" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="1406" y="2040" width="350" height="340" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 2210px; margin-left: 1411px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="line-height: 19px">
                                    <div style="line-height: 1.48">
                                        <div>
                                            - 资源与网络优化
                                        </div>
                                        <div>
                                            - GZIP 压缩
                                        </div>
                                        <div>
                                            - CDN 加载
                                        </div>
                                        <div>
                                            - 缓存
                                        </div>
                                        <div>
                                            - 强缓存
                                        </div>
                                        <div>
                                            - 协商缓存
                                        </div>
                                        <div>
                                            - 使用 HTTP 2.0
                                        </div>
                                        <div>
                                            - 预加载 preload，预渲染 prerender
                                        </div>
                                        <div>
                                            - 图片优化，雪碧图
                                        </div>
                                        <div>
                                            - 打包优化，webpack 优化
                                        </div>
                                        <div>
                                            - 耗时任务优化
                                        </div>
                                        <div>
                                            - web worker
                                        </div>
                                        <div>
                                            - 调度任务 + 时间切片，react scheduler
                                        </div>
                                        <div>
                                            - 任务优先级
                                        </div>
                                        <div>
                                            - requestIdleCallback
                                        </div>
                                        <div>
                                            - 过渡显示
                                        </div>
                                        <div>
                                            - 骨架屏
                                        </div>
                                        <div>
                                            - 占位图
                                        </div>
                                        <div>
                                            - 代码优化
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1411" y="2214" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    - 资源与网络优化...
                </text>
            </switch>
        </g>
        <rect x="2297" y="720" width="370" height="1340" fill="#000000" stroke="#000000" pointer-events="all" transform="translate(2,3)" opacity="0.25"/>
        <rect x="2297" y="720" width="370" height="1340" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 362px; height: 1px; padding-top: 1390px; margin-left: 2302px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: &quot;Comic Sans MS&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div style="font-family: &quot;lotion&quot; , &quot;fira code&quot; , , &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 1.48">
                                    <div>
                                        <span style="font-weight: bold">
                                            ES6 新特性：
                                        </span>
                                        <span>
                                            泛指 ECMAScript 2015 及以后的版本
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="font-weight: bold">
                                            ES2015
                                        </span>
                                    </div>
                                    <div>
                                        - 箭头函数
                                    </div>
                                    <div>
                                        - 支持表达式和陈述式
                                    </div>
                                    <div>
                                        - 与周围代码共享 this
                                    </div>
                                    <div>
                                        - 无 arguments
                                    </div>
                                    <div>
                                        - Class
                                    </div>
                                    <div>
                                        - 基于 prototype 的 extends
                                    </div>
                                    <div>
                                        - constructor, super, static
                                    </div>
                                    <div>
                                        - 声明会提升，但不会初始化赋值
                                    </div>
                                    <div>
                                        - 方法不可枚举
                                    </div>
                                    <div>
                                        - 方法没有 prototype，也没有[[construct]] 不能使用 new 调用
                                    </div>
                                    <div>
                                        - 对象属性增强
                                    </div>
                                    <div>
                                        - 支持
                                        <span style="font-weight: bold">
                                            proto
                                        </span>
                                        设置
                                    </div>
                                    <div>
                                        - 简写
                                    </div>
                                    <div>
                                        - super 调用
                                    </div>
                                    <div>
                                        - 动态属性名
                                    </div>
                                    <div>
                                        - 模板字符串
                                    </div>
                                    <div>
                                        - 解构赋值
                                    </div>
                                    <div>
                                        - 函数参数默认值, rest 与 spread 参数
                                    </div>
                                    <div>
                                        - let &amp; const
                                    </div>
                                    <div>
                                        - 块级声明
                                    </div>
                                    <div>
                                        - 暂时性死区，不会变量提升
                                    </div>
                                    <div>
                                        - 作用域内有效
                                    </div>
                                    <div>
                                        - 不可重复声明
                                    </div>
                                    <div>
                                        - 循环中的块级作用域，每次循环都会重新创建变量
                                    </div>
                                    <div>
                                        - Iterators + For..Of
                                    </div>
                                    <div>
                                        - [Symbol.iterator](){}
                                    </div>
                                    <div>
                                        - Generators
                                    </div>
                                    <div>
                                        - Modules
                                    </div>
                                    <div>
                                        - import
                                    </div>
                                    <div>
                                        - export
                                    </div>
                                    <div>
                                        - Map + Set + WeakMap + WeakSet
                                    </div>
                                    <div>
                                        - Proxy
                                    </div>
                                    <div>
                                        - Symbols
                                    </div>
                                    <div>
                                        - API 扩展
                                    </div>
                                    <div>
                                        - Number.EPSILON
                                    </div>
                                    <div>
                                        - Number.isInteger(Infinity) // false
                                    </div>
                                    <div>
                                        - Number.isNaN("NaN") // false
                                    </div>
                                    <div>
                                        - "abcde".includes("cd") // true
                                    </div>
                                    <div>
                                        - "abc".repeat(3) // "abcabcabc"
                                    </div>
                                    <div>
                                        - Array.from(document.querySelectorAll("\*")) // Returns a real Array
                                    </div>
                                    <div>
                                        - Array.of(1, 2, 3) // [1,2,3]
                                    </div>
                                    <div>
                                        - [0, 0, 0].fill(7, 1) // [0,7,7]
                                    </div>
                                    <div>
                                        - [1,2,3].findIndex(x =&gt; x == 2) // 1
                                    </div>
                                    <div>
                                        - ["a", "b", "c"].entries() // iterator [0, "a"], [1,"b"], [2,"c"]
                                    </div>
                                    <div>
                                        - ["a", "b", "c"].keys() // iterator 0, 1, 2
                                    </div>
                                    <div>
                                        - ["a", "b", "c"].values() // iterator "a", "b", "c"
                                    </div>
                                    <div>
                                        - Object.assign(Point, { origin: new Point(0,0) })
                                    </div>
                                    <div>
                                        - Promise
                                    </div>
                                    <div>
                                        - Reflect API
                                    </div>
                                    <div>
                                        - 函数尾调用优化
                                    </div>
                                    <div>
                                        <span style="font-weight: bold">
                                            <br/>
                                        </span>
                                    </div>
                                    <div>
                                        <b>
                                            其他
                                        </b>
                                    </div>
                                    <div>
                                        - \*\* 取幂
                                    </div>
                                    <div>
                                        - async/await
                                    </div>
                                    <div>
                                        - generator async
                                    </div>
                                    <div>
                                        - dotAll: /./s
                                    </div>
                                    <div>
                                        - 命名捕获: (?&lt;name&gt;x)
                                    </div>
                                    <div>
                                        - 正则: Unicode 模式
                                    </div>
                                    <div>
                                        - 对象的 rest \ spread
                                    </div>
                                    <div>
                                        - optional-catch-binding: try {} catch {}
                                    </div>
                                    <div>
                                        - export 命名导出: export \* as name from ''
                                    </div>
                                    <div>
                                        - 空值合并操作符: ??
                                    </div>
                                    <div>
                                        - 可选链: ?.
                                    </div>
                                    <div>
                                        - dynamic import: import()
                                    </div>
                                    <div>
                                        - Number.MAX_SAFE_INTEGER
                                    </div>
                                    <div>
                                        - 逻辑判断赋值: a ||= b, a &amp;&amp;= b
                                    </div>
                                    <div>
                                        - class properties
                                    </div>
                                    <div>
                                        - class static block: 静态私有属性 static #x = 42;
                                    </div>
                                    <div>
                                        - 对象私有属性:{ #bar = "bar"}
                                    </div>
                                    <div>
                                        - top level await: babel 不支持，用 rollUp 或 webpack 5
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2302" y="1394" fill="rgb(0, 0, 0)" font-family="Comic Sans MS" font-size="12px">
                    ES6 新特性：泛指 ECMAScript 2015 及以后的版本...
                </text>
            </switch>
        </g>
        <rect x="2062" y="1320" width="70" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1330px; margin-left: 2097px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                <font style="font-size: 10px">
                                    ES6 新特性
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2097" y="1334" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    ES6 新特性
                </text>
            </switch>
        </g>
    </g>
    <switch>
        <g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/>
        <a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank">
            <text text-anchor="middle" font-size="10px" x="50%" y="100%">
                Viewer does not support full SVG 1.1
            </text>
        </a>
    </switch>
</svg>